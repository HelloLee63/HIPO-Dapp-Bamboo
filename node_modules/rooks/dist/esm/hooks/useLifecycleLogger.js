import { useDidMount } from './useDidMount.js';
import { useDidUpdate } from './useDidUpdate.js';
import { useWillUnmount } from './useWillUnmount.js';

/**
 * useLifecycleLogger hook
 * logs parameters as component transitions through lifecycles
 *
 * @param componentName Name of the component
 * @param {...*} otherArgs Other arguments to log
 * @see https://rooks.vercel.app/docs/useLifecycleLogger
 */
const useLifecycleLogger = (componentName = "Component", ...otherArgs) => {
    useDidMount(() => {
        console.log(`${componentName} mounted`, ...otherArgs);
        return () => console.log(`${componentName} unmounted`);
    });
    useDidUpdate(() => {
        console.log(`${componentName} updated`, ...otherArgs);
    });
    useWillUnmount(() => {
        console.log(`${componentName} unmounted`);
    });
};

export { useLifecycleLogger };

import { useCallback } from 'react';
import { useFreshRef } from './useFreshRef.js';

/**
 * useFreshCallback
 * @description Avoid stale closures and keep your callback fresh
 * @see {@link https://rooks.vercel.app/docs/useFreshCallback}
 */
/**
 * useFreshCallback
 * @param callback Any callback function
 * @returns A fresh callback.
 * @see https://rooks.vercel.app/docs/useFreshCallback
 */
function useFreshCallback(callback) {
    const freshRef = useFreshRef(callback);
    const tick = useCallback((...args) => {
        if (typeof freshRef.current === "function") {
            freshRef.current(...args);
        }
    }, [freshRef]);
    return tick;
}

export { useFreshCallback };

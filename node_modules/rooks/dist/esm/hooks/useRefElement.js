import { useState, useCallback } from 'react';

/**
 * useRefElement hook for React
 * Helps bridge gap between callback ref and state
 * Manages the element called with callback ref api using state variable
 * @returns {[RefElementOrNull, (element: HTMLElementOrNull) => void]}
 * @see https://rooks.vercel.app/docs/useRefElement
 */
function useRefElement() {
    const [refElement, setRefElement] = useState(null);
    const ref = useCallback((element) => {
        setRefElement(element);
    }, []);
    return [ref, refElement];
}

export { useRefElement };

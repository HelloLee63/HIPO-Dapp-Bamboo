import { useState, useCallback } from 'react';
import { useGlobalObjectEventListener } from './useGlobalObjectEventListener.js';

/**
 * useDocumentVisibilityState
 * @description Returns the visibility state of the document. Returns null on the server side.
 * @returns {UseDocumentVisibilityStateReturnType} The visibility state of the document. `null` on the server.
 * @see {@link https://rooks.vercel.app/docs/useDocumentVisibilityState}
 */
function useDocumentVisibilityState() {
    const [visibilityState, setVisibilityState] = useState(document ? document.visibilityState : null);
    const handleVisibilityChange = useCallback(() => {
        setVisibilityState(document ? document.visibilityState : null);
    }, []);
    useGlobalObjectEventListener(global.document, "visibilitychange", handleVisibilityChange, {}, true, true);
    return visibilityState;
}

export { useDocumentVisibilityState };

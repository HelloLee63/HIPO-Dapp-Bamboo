import { useState } from 'react';
import { useIsomorphicEffect } from './useIsomorphicEffect.js';

const nullDimensions = {
    innerHeight: null,
    innerWidth: null,
    outerHeight: null,
    outerWidth: null,
};
function getDimensions() {
    return {
        innerHeight: window.innerHeight,
        innerWidth: window.innerWidth,
        outerHeight: window.outerHeight,
        outerWidth: window.outerWidth,
    };
}
/**
 * useWindowSize hook
 * A hook that provides information of the dimensions of the window
 *
 * @returns Dimensions of the window
 * @see https://rooks.vercel.app/docs/useWindowSize
 */
function useWindowSize() {
    const [windowSize, setWindowSize] = useState(() => {
        if (typeof window === "undefined") {
            return nullDimensions;
        }
        else {
            return getDimensions();
        }
    });
    function onResize() {
        setWindowSize(getDimensions());
    }
    // set resize handler once on mount and clean before unmount
    useIsomorphicEffect(() => {
        if (typeof window === "undefined") {
            return () => { };
        }
        else {
            window.addEventListener("resize", onResize);
            return () => {
                window.removeEventListener("resize", onResize);
            };
        }
    }, []);
    return windowSize;
}

export { useWindowSize };

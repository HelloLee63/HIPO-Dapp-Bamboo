'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var useDidMount = require('./useDidMount.js');
var useDidUpdate = require('./useDidUpdate.js');
var useWillUnmount = require('./useWillUnmount.js');

/**
 * useLifecycleLogger hook
 * logs parameters as component transitions through lifecycles
 *
 * @param componentName Name of the component
 * @param {...*} otherArgs Other arguments to log
 * @see https://rooks.vercel.app/docs/useLifecycleLogger
 */
const useLifecycleLogger = (componentName = "Component", ...otherArgs) => {
    useDidMount.useDidMount(() => {
        console.log(`${componentName} mounted`, ...otherArgs);
        return () => console.log(`${componentName} unmounted`);
    });
    useDidUpdate.useDidUpdate(() => {
        console.log(`${componentName} updated`, ...otherArgs);
    });
    useWillUnmount.useWillUnmount(() => {
        console.log(`${componentName} unmounted`);
    });
};

exports.useLifecycleLogger = useLifecycleLogger;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

/**
 * useEffectOnceWhen hook
 *
 * @description It fires a callback once when a condition is true or become true.
 * Fires the callback at most one time.
 *
 * @param callback The callback to fire
 * @param when The condition which needs to be true
 * @see https://rooks.vercel.app/docs/useEffectOnceWhen
 */
function useEffectOnceWhen(callback, when = true) {
    const hasRunOnceRef = react.useRef(false);
    const callbackRef = react.useRef(callback);
    react.useEffect(() => {
        callbackRef.current = callback;
    });
    react.useEffect(() => {
        if (when && !hasRunOnceRef.current) {
            callbackRef.current();
            hasRunOnceRef.current = true;
        }
    }, [when]);
}

exports.useEffectOnceWhen = useEffectOnceWhen;

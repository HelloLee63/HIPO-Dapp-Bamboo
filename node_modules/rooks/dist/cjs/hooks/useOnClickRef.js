'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var noop = require('../utils/noop.js');
var react = require('react');
var useFreshCallback = require('./useFreshCallback.js');

/**
 * useOnClickRef hook
 *
 * This hook runs a callback for both clicks and tap events when the element is clicked or tapped.
 *
 * @param {Function} onClick The callback function to run on click or tap
 * @returns {Function} A callback ref which can be attached to an element
 */
function useOnClickRef(onClick) {
    const [node, setNode] = react.useState(null);
    const handleEvent = react.useCallback((event) => {
        event.preventDefault();
        onClick();
    }, [onClick]);
    const freshCallback = useFreshCallback.useFreshCallback(handleEvent);
    react.useEffect(() => {
        if (node) {
            node.addEventListener("click", freshCallback);
            node.addEventListener("touchend", freshCallback);
            return () => {
                node.removeEventListener("click", freshCallback);
                node.removeEventListener("touchend", freshCallback);
            };
        }
        return noop.noop;
    }, [node, freshCallback]);
    const ref = react.useCallback((element) => {
        if (element) {
            setNode(element);
        }
    }, []);
    return ref;
}

exports.useOnClickRef = useOnClickRef;

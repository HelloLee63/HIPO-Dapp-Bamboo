'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var raf = require('raf');
var react = require('react');
var noop = require('../utils/noop.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var raf__default = /*#__PURE__*/_interopDefaultLegacy(raf);

/**
 *
 * useRaf
 * Uses a polyfilled version of requestAnimationFrame
 *
 * @param {Function} callback The callback function to be executed
 * @param {boolean} [isActive] The value which while true, keeps the raf running infinitely
 * @see https://rooks.vercel.app/docs/useRaf
 */
function useRaf(callback, isActive) {
    const savedCallback = react.useRef();
    // Remember the latest function.
    react.useEffect(() => {
        savedCallback.current = callback;
    }, [callback]);
    react.useEffect(() => {
        let animationFrame;
        let startTime = Date.now();
        function tick() {
            var _a;
            const timeElapsed = Date.now() - startTime;
            startTime = Date.now();
            loop();
            (_a = savedCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedCallback, timeElapsed);
        }
        function loop() {
            animationFrame = raf__default["default"](tick);
        }
        if (isActive) {
            startTime = Date.now();
            loop();
            return () => {
                if (animationFrame) {
                    raf__default["default"].cancel(animationFrame);
                }
            };
        }
        else {
            return noop.noop;
        }
    }, [isActive]);
}

exports.useRaf = useRaf;

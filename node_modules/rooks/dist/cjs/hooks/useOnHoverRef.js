'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var noop = require('../utils/noop.js');
var react = require('react');
var useFreshCallback = require('./useFreshCallback.js');

function useOnHoverRef(onMouseEnter, onMouseLeave) {
    const [node, setNode] = react.useState(null);
    const handleMouseEnter = react.useCallback((e) => {
        onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(e);
    }, [onMouseEnter]);
    const handleMouseLeave = react.useCallback((e) => {
        onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(e);
    }, [onMouseLeave]);
    const mouseEnterCallback = useFreshCallback.useFreshCallback(handleMouseEnter);
    const mouseLeaveCallback = useFreshCallback.useFreshCallback(handleMouseLeave);
    react.useEffect(() => {
        if (node) {
            node.addEventListener("mouseenter", mouseEnterCallback);
            node.addEventListener("mouseleave", mouseLeaveCallback);
            return () => {
                node.removeEventListener("mouseenter", mouseEnterCallback);
                node.removeEventListener("mouseleave", mouseLeaveCallback);
            };
        }
        else {
            return noop.noop;
        }
    }, [mouseEnterCallback, mouseLeaveCallback, node]);
    const ref = (el) => {
        setNode(el);
    };
    return ref;
}

exports.useOnHoverRef = useOnHoverRef;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

/**
 * useFocusWithin
 * @description Handles focus events for the target component.
 * @see {@link https://rooks.vercel.app/docs/useFocusWithin}
 */
const useFocusWithin = (props) => {
    const { onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
    const state = react.useRef({
        isFocusWithin: false,
    });
    const onBlur = react.useCallback((e) => {
        if (state.current.isFocusWithin &&
            !e.currentTarget.contains(e.relatedTarget)) {
            state.current.isFocusWithin = false;
            if (onBlurWithin)
                onBlurWithin(e);
            if (onFocusWithinChange)
                onFocusWithinChange(false);
        }
    }, [onBlurWithin, onFocusWithinChange]);
    const onFocus = react.useCallback((e) => {
        if (!state.current.isFocusWithin) {
            if (onFocusWithin)
                onFocusWithin(e);
            if (onFocusWithinChange)
                onFocusWithinChange(true);
            state.current.isFocusWithin = true;
        }
    }, [onFocusWithin, onFocusWithinChange]);
    return {
        focusWithinProps: {
            onFocus,
            onBlur,
        },
    };
};

exports.useFocusWithin = useFocusWithin;

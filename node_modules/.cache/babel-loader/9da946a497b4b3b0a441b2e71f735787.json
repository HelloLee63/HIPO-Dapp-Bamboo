{"ast":null,"code":"import { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * @returns {boolean} Is navigator online\r\n */\nfunction getSnapshot() {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n  return navigator.onLine;\n}\nfunction subscribe(onStoreChange) {\n  if (typeof window !== \"undefined\") {\n    window.addEventListener(\"online\", onStoreChange);\n    window.addEventListener(\"offline\", onStoreChange);\n    return () => {\n      window.removeEventListener(\"online\", onStoreChange);\n      window.removeEventListener(\"offline\", onStoreChange);\n    };\n  } else {\n    console.warn(\"useOnline: window is undefined.\");\n    return noop;\n  }\n}\n/**\r\n * useOnline hook\r\n *\r\n * Returns true if navigator is online, false if not.\r\n *\r\n * @returns {boolean} The value of navigator.onLine\r\n * @see https://rooks.vercel.app/docs/useOnline\r\n */\nfunction useOnline() {\n  const isOnline = useSyncExternalStore(subscribe, getSnapshot);\n  return isOnline;\n}\nexport { useOnline };","map":{"version":3,"names":["useSyncExternalStore","noop","getSnapshot","window","navigator","onLine","subscribe","onStoreChange","addEventListener","removeEventListener","console","warn","useOnline","isOnline"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useOnline.js"],"sourcesContent":["import { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * @returns {boolean} Is navigator online\r\n */\r\nfunction getSnapshot() {\r\n    if (typeof window === \"undefined\") {\r\n        return null;\r\n    }\r\n    return navigator.onLine;\r\n}\r\nfunction subscribe(onStoreChange) {\r\n    if (typeof window !== \"undefined\") {\r\n        window.addEventListener(\"online\", onStoreChange);\r\n        window.addEventListener(\"offline\", onStoreChange);\r\n        return () => {\r\n            window.removeEventListener(\"online\", onStoreChange);\r\n            window.removeEventListener(\"offline\", onStoreChange);\r\n        };\r\n    }\r\n    else {\r\n        console.warn(\"useOnline: window is undefined.\");\r\n        return noop;\r\n    }\r\n}\r\n/**\r\n * useOnline hook\r\n *\r\n * Returns true if navigator is online, false if not.\r\n *\r\n * @returns {boolean} The value of navigator.onLine\r\n * @see https://rooks.vercel.app/docs/useOnline\r\n */\r\nfunction useOnline() {\r\n    const isOnline = useSyncExternalStore(subscribe, getSnapshot);\r\n    return isOnline;\r\n}\n\nexport { useOnline };\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAAA,EAAG;EACnB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/B,OAAO,IAAI;EACf;EACA,OAAOC,SAAS,CAACC,MAAM;AAC3B;AACA,SAASC,SAASA,CAACC,aAAa,EAAE;EAC9B,IAAI,OAAOJ,MAAM,KAAK,WAAW,EAAE;IAC/BA,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAED,aAAa,CAAC;IAChDJ,MAAM,CAACK,gBAAgB,CAAC,SAAS,EAAED,aAAa,CAAC;IACjD,OAAO,MAAM;MACTJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEF,aAAa,CAAC;MACnDJ,MAAM,CAACM,mBAAmB,CAAC,SAAS,EAAEF,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,MACI;IACDG,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;IAC/C,OAAOV,IAAI;EACf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,SAASA,CAAA,EAAG;EACjB,MAAMC,QAAQ,GAAGb,oBAAoB,CAACM,SAAS,EAAEJ,WAAW,CAAC;EAC7D,OAAOW,QAAQ;AACnB;AAEA,SAASD,SAAS"},"metadata":{},"sourceType":"module"}
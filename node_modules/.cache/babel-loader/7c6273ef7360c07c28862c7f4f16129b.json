{"ast":null,"code":"import { differenceInSeconds, differenceInMinutes, differenceInHours, differenceInDays } from 'date-fns';\nexport const MINUTE_IN_SECONDS = 60;\nexport const HOUR_IN_SECONDS = 60 * 60;\nexport const DAY_IN_SECONDS = 60 * 60 * 24;\nexport function formatValueWithSymbol(value) {\n  value = value.toString().replace(/[^0-9.]/g, '');\n  if (value < 1000) {\n    return value;\n  }\n  const si = [{\n    v: 1E3,\n    s: \"K\"\n  }, {\n    v: 1E6,\n    s: \"M\"\n  }, {\n    v: 1E9,\n    s: \"B\"\n  }, {\n    v: 1E12,\n    s: \"T\"\n  }, {\n    v: 1E15,\n    s: \"P\"\n  }, {\n    v: 1E18,\n    s: \"E\"\n  }];\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (value >= si[index].v) {\n      break;\n    }\n  }\n  return (value / si[index].v).toFixed(2).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, \"$1\") + si[index].s;\n}\nexport function formatDateTime(date) {\n  var _navigator$language;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  if (!date) return '';\n  if (typeof date === 'number' || typeof date === 'string') {\n    date = new Date(date);\n  }\n  return date.toLocaleString((_navigator$language = navigator.language) !== null && _navigator$language !== void 0 ? _navigator$language : navigator.languages, options);\n}\nexport function formatTimer(secondsPassed) {\n  if (!secondsPassed) return '';\n  if (typeof secondsPassed === 'number' || typeof secondsPassed === 'string') {\n    switch (secondsPassed) {\n      case secondsPassed < MINUTE_IN_SECONDS:\n        return differenceInSeconds(secondsPassed, 0);\n      case secondsPassed < HOUR_IN_SECONDS:\n        return differenceInMinutes(secondsPassed, 0);\n      case secondsPassed < DAY_IN_SECONDS:\n        return differenceInHours(secondsPassed, 0);\n      case secondsPassed > DAY_IN_SECONDS:\n        return differenceInDays(secondsPassed, 0);\n    }\n  }\n}","map":{"version":3,"names":["differenceInSeconds","differenceInMinutes","differenceInHours","differenceInDays","MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","formatValueWithSymbol","value","toString","replace","si","v","s","index","length","toFixed","formatDateTime","date","_navigator$language","options","arguments","undefined","year","month","day","hour","minute","Date","toLocaleString","navigator","language","languages","formatTimer","secondsPassed"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/helpers/formater.js"],"sourcesContent":["import { differenceInSeconds, differenceInMinutes, differenceInHours, differenceInDays } from 'date-fns';\n\nexport const MINUTE_IN_SECONDS = 60;\nexport const HOUR_IN_SECONDS = 60 * 60;\nexport const DAY_IN_SECONDS = 60 * 60 * 24;\n\n\n\nexport function formatValueWithSymbol(value) {\n  value = value.toString().replace(/[^0-9.]/g, '');\n  if (value < 1000) {\n    return value;\n  }\n  const si = [\n    {v: 1E3, s: \"K\"},\n    {v: 1E6, s: \"M\"},\n    {v: 1E9, s: \"B\"},\n    {v: 1E12, s: \"T\"},\n    {v: 1E15, s: \"P\"},\n    {v: 1E18, s: \"E\"}\n    ];\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (value >= si[index].v) {\n      break;\n    }\n  }\n  return (value / si[index].v).toFixed(2).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, \"$1\") + si[index].s;\n}\n\nexport function formatDateTime(\n  date,\n  options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  },\n) {\n  if (!date) return '';\n  if (typeof date === 'number' || typeof date === 'string') {\n    date = new Date(date);\n  }\n\n  return date.toLocaleString(navigator.language ?? navigator.languages, options);\n}\n\nexport function formatTimer(secondsPassed) {\n  if (!secondsPassed) return '';\n  if (typeof secondsPassed === 'number' || typeof secondsPassed === 'string') {\n    switch (secondsPassed) {\n      case secondsPassed < MINUTE_IN_SECONDS:\n        return differenceInSeconds(secondsPassed, 0)\n      case secondsPassed < HOUR_IN_SECONDS:\n        return differenceInMinutes(secondsPassed, 0)\n      case secondsPassed < DAY_IN_SECONDS:\n        return differenceInHours(secondsPassed, 0)\n      case secondsPassed > DAY_IN_SECONDS:\n        return differenceInDays(secondsPassed, 0)\n    }\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
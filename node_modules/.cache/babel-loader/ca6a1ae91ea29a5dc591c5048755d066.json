{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\n// import TxStatusModal from \"../tx-status-modal/TxStatusModal\"\nimport UserRejectedModal from \"../user-rejected-modal/UserRejectedModal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractListener = props => {\n  _s();\n  const {\n    contract,\n    renderProgress,\n    renderSuccess\n  } = props;\n  const [userRejectedVisible, setUserRejected] = useState(false);\n  const [txStatus, setTxStatus] = useState({\n    visible: false,\n    state: undefined,\n    meta: undefined\n  });\n  useEffect(() => {\n    if (!contract) {\n      return;\n    }\n    function onHash(txHash, meta) {\n      setTxStatus(prevState => ({\n        ...prevState,\n        visible: true,\n        state: meta.state,\n        meta\n      }));\n    }\n    function onSuccess(result, meta) {\n      setTxStatus(prevState => {\n        var _prevState$meta;\n        return ((_prevState$meta = prevState.meta) === null || _prevState$meta === void 0 ? void 0 : _prevState$meta.id) === meta.id ? {\n          ...prevState,\n          state: meta.state\n        } : prevState;\n      });\n    }\n    function onFail(error, meta) {\n      if (error.code === 4001) {\n        setUserRejected(true);\n      } else {\n        setTxStatus(prevState => {\n          var _prevState$meta2;\n          return ((_prevState$meta2 = prevState.meta) === null || _prevState$meta2 === void 0 ? void 0 : _prevState$meta2.id) === meta.id ? {\n            ...prevState,\n            state: meta.state\n          } : prevState;\n        });\n      }\n    }\n    contract.on('tx:hash', onHash);\n    contract.on('tx:success', onSuccess);\n    contract.on('tx:fail', onFail);\n    return () => {\n      contract.off('tx:hash', onHash);\n      contract.off('tx:success', onSuccess);\n      contract.off('tx:fail', onFail);\n    };\n  }, [contract]);\n  const handleUserRejectedCancel = useCallback(() => {\n    setUserRejected(false);\n  }, []);\n  const handleStatusModalCancel = useCallback(() => {\n    setTxStatus(prevState => ({\n      ...prevState,\n      visible: false,\n      state: undefined,\n      txHash: undefined\n    }));\n  }, []);\n  if (userRejectedVisible) {\n    // return <UserRejectedModal onCancel={handleUserRejectedCancel} \n    //     errorText='You rejected the request.'\n    //     buttonText='Dismiss'\n    //   />\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  if (txStatus.visible) {\n    return (\n      /*#__PURE__*/\n      // <TxStatusModal\n      //   state={txStatus.state}\n      //   txHash={txStatus.meta?.txHash}\n      //   renderProgress={() => renderProgress?.(txStatus.meta)}\n      //   renderSucess={() => renderSuccess?.(txStatus.meta)}\n      //   onCancel={handleStatusModalCancel} \n      // />\n      _jsxDEV(_Fragment, {}, void 0, false)\n    );\n  }\n  return null;\n};\n_s(ContractListener, \"Myttr3qlcfwuYtdt+T1AZSjqbew=\");\n_c = ContractListener;\nexport default ContractListener;\nvar _c;\n$RefreshReg$(_c, \"ContractListener\");","map":{"version":3,"names":["useCallback","useEffect","useState","UserRejectedModal","Fragment","_Fragment","jsxDEV","_jsxDEV","ContractListener","props","_s","contract","renderProgress","renderSuccess","userRejectedVisible","setUserRejected","txStatus","setTxStatus","visible","state","undefined","meta","onHash","txHash","prevState","onSuccess","result","_prevState$meta","id","onFail","error","code","_prevState$meta2","on","off","handleUserRejectedCancel","handleStatusModalCancel","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/contract-listener/ContractListener.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\n// import TxStatusModal from \"../tx-status-modal/TxStatusModal\"\nimport UserRejectedModal from \"../user-rejected-modal/UserRejectedModal\"\n\nconst ContractListener = props => {\n\n  const { contract, renderProgress, renderSuccess } = props\n\n  const [userRejectedVisible, setUserRejected] = useState(false)\n\n  const [txStatus, setTxStatus] = useState({\n    visible: false,\n    state: undefined,\n    meta: undefined,\n  })\n\n  useEffect(() => {\n    if (!contract) {\n      return\n    }\n\n    function onHash(txHash, meta) {\n      setTxStatus(prevState => ({\n        ...prevState,\n        visible: true,\n        state: meta.state,\n        meta,\n      }))\n    }\n\n    function onSuccess(result, meta) {\n      setTxStatus(prevState =>\n        prevState.meta?.id === meta.id\n          ? {\n            ...prevState,\n            state: meta.state,\n          }\n          : prevState,\n        )\n    }\n\n    function onFail(error, meta) {\n      if (error.code === 4001) {\n        setUserRejected(true);\n      } else {\n        setTxStatus(prevState =>\n          prevState.meta?.id === meta.id\n          ? {\n            ...prevState,\n            state: meta.state,\n          }\n          : prevState,\n          )\n      }\n    }\n\n    contract.on('tx:hash', onHash)\n    contract.on('tx:success', onSuccess)\n    contract.on('tx:fail', onFail)\n\n    return () => {\n      contract.off('tx:hash', onHash)\n      contract.off('tx:success', onSuccess)\n      contract.off('tx:fail', onFail)\n    }\n\n  }, [contract])\n\n  const handleUserRejectedCancel = useCallback(() => {\n    setUserRejected(false)\n  }, []);\n\n  const handleStatusModalCancel = useCallback(() => {\n    setTxStatus(prevState => ({\n      ...prevState,\n      visible: false,\n      state: undefined,\n      txHash: undefined,\n    }))\n  }, [])\n\n  if (userRejectedVisible) {\n    // return <UserRejectedModal onCancel={handleUserRejectedCancel} \n    //     errorText='You rejected the request.'\n    //     buttonText='Dismiss'\n    //   />\n    return <></>\n  }\n\n  if (txStatus.visible) {\n    return (\n      // <TxStatusModal\n      //   state={txStatus.state}\n      //   txHash={txStatus.meta?.txHash}\n      //   renderProgress={() => renderProgress?.(txStatus.meta)}\n      //   renderSucess={() => renderSuccess?.(txStatus.meta)}\n      //   onCancel={handleStatusModalCancel} \n      // />\n      <></>\n    )\n  }\n\n  return null\n}\n\nexport default ContractListener"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD;AACA,OAAOC,iBAAiB,MAAM,0CAA0C;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAEhC,MAAM;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGJ,KAAK;EAEzD,MAAM,CAACK,mBAAmB,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE9D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEC,SAAS;IAChBC,IAAI,EAAED;EACR,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,QAAQ,EAAE;MACb;IACF;IAEA,SAASW,MAAMA,CAACC,MAAM,EAAEF,IAAI,EAAE;MAC5BJ,WAAW,CAACO,SAAS,KAAK;QACxB,GAAGA,SAAS;QACZN,OAAO,EAAE,IAAI;QACbC,KAAK,EAAEE,IAAI,CAACF,KAAK;QACjBE;MACF,CAAC,CAAC,CAAC;IACL;IAEA,SAASI,SAASA,CAACC,MAAM,EAAEL,IAAI,EAAE;MAC/BJ,WAAW,CAACO,SAAS;QAAA,IAAAG,eAAA;QAAA,OACnB,EAAAA,eAAA,GAAAH,SAAS,CAACH,IAAI,cAAAM,eAAA,uBAAdA,eAAA,CAAgBC,EAAE,MAAKP,IAAI,CAACO,EAAE,GAC1B;UACA,GAAGJ,SAAS;UACZL,KAAK,EAAEE,IAAI,CAACF;QACd,CAAC,GACCK,SAAS;MAAA,EACZ;IACL;IAEA,SAASK,MAAMA,CAACC,KAAK,EAAET,IAAI,EAAE;MAC3B,IAAIS,KAAK,CAACC,IAAI,KAAK,IAAI,EAAE;QACvBhB,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACLE,WAAW,CAACO,SAAS;UAAA,IAAAQ,gBAAA;UAAA,OACnB,EAAAA,gBAAA,GAAAR,SAAS,CAACH,IAAI,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBJ,EAAE,MAAKP,IAAI,CAACO,EAAE,GAC5B;YACA,GAAGJ,SAAS;YACZL,KAAK,EAAEE,IAAI,CAACF;UACd,CAAC,GACCK,SAAS;QAAA,EACV;MACL;IACF;IAEAb,QAAQ,CAACsB,EAAE,CAAC,SAAS,EAAEX,MAAM,CAAC;IAC9BX,QAAQ,CAACsB,EAAE,CAAC,YAAY,EAAER,SAAS,CAAC;IACpCd,QAAQ,CAACsB,EAAE,CAAC,SAAS,EAAEJ,MAAM,CAAC;IAE9B,OAAO,MAAM;MACXlB,QAAQ,CAACuB,GAAG,CAAC,SAAS,EAAEZ,MAAM,CAAC;MAC/BX,QAAQ,CAACuB,GAAG,CAAC,YAAY,EAAET,SAAS,CAAC;MACrCd,QAAQ,CAACuB,GAAG,CAAC,SAAS,EAAEL,MAAM,CAAC;IACjC,CAAC;EAEH,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,MAAMwB,wBAAwB,GAAGnC,WAAW,CAAC,MAAM;IACjDe,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,uBAAuB,GAAGpC,WAAW,CAAC,MAAM;IAChDiB,WAAW,CAACO,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZN,OAAO,EAAE,KAAK;MACdC,KAAK,EAAEC,SAAS;MAChBG,MAAM,EAAEH;IACV,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,mBAAmB,EAAE;IACvB;IACA;IACA;IACA;IACA,oBAAOP,OAAA,CAAAF,SAAA,oBAAK;EACd;EAEA,IAAIW,QAAQ,CAACE,OAAO,EAAE;IACpB;MAAA;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACAX,OAAA,CAAAF,SAAA;IAAK;EAET;EAEA,OAAO,IAAI;AACb,CAAC;AAAAK,EAAA,CAnGKF,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAqGtB,eAAeA,gBAAgB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ethers } from 'ethers';\nimport BigNumber from 'bignumber.js';\nimport Web3Contract, { createAbiItem } from '../web3Contract';\nconst ERC20ABI = [createAbiItem('name', [], ['string']), createAbiItem('symbol', [], ['string']), createAbiItem('decimals', [], ['uint8']), createAbiItem('totalSupply', [], ['uint256']), createAbiItem('balanceOf', ['address'], ['uint256']), createAbiItem('allowance', ['address', 'address'], ['uint256']), createAbiItem('approve', ['address', 'uint256'], ['bool'])];\nexport default class Erc20Contract extends Web3Contract {\n  constructor(abi, address) {\n    super([...ERC20ABI, ...abi], address, '');\n    this.balances = new Map();\n    this.allowances = new Map();\n    this.on(Web3Contract.UPDATE_ACCOUNT, () => {\n      this.balances.clear();\n      this.allowances.clear();\n      this.emit(Web3Contract.UPDATE_DATA);\n    });\n  }\n  get balance() {\n    return this.getBalanceOf(this.account);\n  }\n  getBalanceOf() {\n    let address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.account;\n    return address ? this.balances.get(address) : undefined;\n  }\n  getAllowanceOf(spenderAddress) {\n    return spenderAddress ? this.allowances.get(spenderAddress) : undefined;\n  }\n  isAllowedOf(spenderAddress) {\n    var _this$getAllowanceOf;\n    return (_this$getAllowanceOf = this.getAllowanceOf(spenderAddress)) === null || _this$getAllowanceOf === void 0 ? void 0 : _this$getAllowanceOf.gt(BigNumber(0));\n  }\n  async loadCommon() {\n    const [name, symbol, decimals, totalSupply] = await this.batch([{\n      method: 'name'\n    }, {\n      method: 'symbol'\n    }, {\n      method: 'decimals'\n    }, {\n      method: 'totalSupply'\n    }]);\n    this.name = name;\n    this.symbol = symbol;\n    this.decimals = Number(decimals);\n    this.totalSupply = new BigNumber(totalSupply);\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n  async loadBalance() {\n    let address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.account;\n    if (!address) {\n      return Promise.reject(new Error('Invalid owner address!'));\n    }\n    const balance = await this.call('balanceOf', [address]);\n    const value = new BigNumber(balance);\n    if (value) {\n      this.balances.set(address, value);\n      this.emit(Web3Contract.UPDATE_DATA);\n    }\n  }\n  async loadAllowance(spenderAddress) {\n    const address = this.account;\n    if (!address) {\n      return Promise.reject(new Error('Invalid owner address!'));\n    }\n    const allowance = await this.call('allowance', [address, spenderAddress]);\n    const value = new BigNumber(allowance);\n    if (value) {\n      this.allowances.set(spenderAddress, value);\n      this.emit(Web3Contract.UPDATE_DATA);\n    }\n  }\n  async approve(spenderAddress, enable) {\n    if (!spenderAddress) {\n      return Promise.reject(new Error('Invalid spender address!'));\n    }\n    const value = enable ? ethers.constants.MaxUint256 : ethers.constants.Zero;\n    await this.send('approve', [spenderAddress, value]);\n    await this.loadAllowance(spenderAddress).catch(() => undefined);\n  }\n}","map":{"version":3,"names":["ethers","BigNumber","Web3Contract","createAbiItem","ERC20ABI","Erc20Contract","constructor","abi","address","balances","Map","allowances","on","UPDATE_ACCOUNT","clear","emit","UPDATE_DATA","balance","getBalanceOf","account","arguments","length","undefined","get","getAllowanceOf","spenderAddress","isAllowedOf","_this$getAllowanceOf","gt","loadCommon","name","symbol","decimals","totalSupply","batch","method","Number","loadBalance","Promise","reject","Error","call","value","set","loadAllowance","allowance","approve","enable","constants","MaxUint256","Zero","send","catch"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/contracts/erc20Contract.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport BigNumber from 'bignumber.js';\nimport Web3Contract, { createAbiItem } from '../web3Contract';\n\nconst ERC20ABI = [\n  createAbiItem('name', [], ['string']),\n  createAbiItem('symbol', [], ['string']),\n  createAbiItem('decimals', [], ['uint8']),\n  createAbiItem('totalSupply', [], ['uint256']),\n  createAbiItem('balanceOf', ['address'], ['uint256']),\n  createAbiItem('allowance', ['address', 'address'], ['uint256']),\n  createAbiItem('approve', ['address', 'uint256'], ['bool']),\n];\n\nexport default class Erc20Contract extends Web3Contract {\n\n  symbol\n\n  decimals\n\n  totalSupply\n\n  balances\n\n  allowances\n\n  constructor(abi, address) {\n    super([...ERC20ABI, ...abi], address, '');\n\n    this.balances = new Map();\n    this.allowances = new Map();\n\n    this.on(Web3Contract.UPDATE_ACCOUNT, () => {\n      this.balances.clear();\n      this.allowances.clear();\n      this.emit(Web3Contract.UPDATE_DATA);\n    });\n  }\n\n  get balance() {\n    return this.getBalanceOf(this.account);\n  }\n\n  getBalanceOf(address = this.account) {\n    return address ? this.balances.get(address) : undefined;\n  }\n\n  getAllowanceOf(spenderAddress) {\n    return spenderAddress ? this.allowances.get(spenderAddress) : undefined;\n  }\n\n  isAllowedOf(spenderAddress) {\n    return this.getAllowanceOf(spenderAddress)?.gt(BigNumber(0));\n  }\n\n  async loadCommon() {\n    const [name, symbol, decimals, totalSupply] = await this.batch([\n      { method: 'name' },\n      { method: 'symbol' },\n      { method: 'decimals' },\n      { method: 'totalSupply' },\n    ]);\n\n    this.name = name;\n    this.symbol = symbol;\n    this.decimals = Number(decimals);\n    this.totalSupply = new BigNumber(totalSupply);\n    this.emit(Web3Contract.UPDATE_DATA);\n  }\n\n  async loadBalance(address = this.account) {\n    if (!address) {\n      \n      return Promise.reject(new Error('Invalid owner address!'));\n    }\n \n    const balance = await this.call('balanceOf', [address]);\n    const value = new BigNumber(balance);\n\n    if (value) {\n      this.balances.set(address, value);\n      this.emit(Web3Contract.UPDATE_DATA);\n    }\n  }\n\n  async loadAllowance(spenderAddress) {\n    const address = this.account;\n\n    if (!address) {\n      return Promise.reject(new Error('Invalid owner address!'));\n    }\n\n    const allowance = await this.call('allowance', [address, spenderAddress]);\n    \n    const value = new BigNumber(allowance);\n  \n    if (value) {\n      this.allowances.set(spenderAddress, value);\n      this.emit(Web3Contract.UPDATE_DATA);\n    } \n  }\n\n  async approve(spenderAddress, enable) {\n    if (!spenderAddress) {\n      return Promise.reject(new Error('Invalid spender address!'));\n    }\n\n    const value = enable ? ethers.constants.MaxUint256 : ethers.constants.Zero\n\n    await this.send('approve', [spenderAddress, value]);\n    await this.loadAllowance(spenderAddress).catch(() => undefined);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState } from 'react';\nimport { useOnWindowResize } from './useOnWindowResize.js';\nimport { useOnWindowScroll } from './useOnWindowScroll.js';\nfunction computeScrollPosition() {\n  if (typeof window === \"undefined\") {\n    return {\n      scrollX: 0,\n      scrollY: 0\n    };\n  } else {\n    return {\n      scrollX: window.scrollX || window.pageXOffset,\n      scrollY: window.scrollY || window.pageYOffset\n    };\n  }\n}\n/**\r\n *\r\n * useWindowScrollPosition hook\r\n * A React hook to get the scroll position of the window\r\n *\r\n * @returns an object containing scrollX and scrollY values\r\n * @see https://rooks.vercel.app/docs/useWindowScrollPosition\r\n */\nfunction useWindowScrollPosition() {\n  const [scrollPosition, setScrollPosition] = useState(computeScrollPosition);\n  /**\r\n   * Recalculate on scroll\r\n   */\n  useOnWindowScroll(() => {\n    setScrollPosition(computeScrollPosition());\n  }, true, true);\n  /**\r\n   * Recalculate on resize\r\n   */\n  useOnWindowResize(() => {\n    setScrollPosition(computeScrollPosition());\n  }, true, true);\n  return scrollPosition;\n}\nexport { useWindowScrollPosition };","map":{"version":3,"names":["useState","useOnWindowResize","useOnWindowScroll","computeScrollPosition","window","scrollX","scrollY","pageXOffset","pageYOffset","useWindowScrollPosition","scrollPosition","setScrollPosition"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useWindowScrollPosition.js"],"sourcesContent":["import { useState } from 'react';\nimport { useOnWindowResize } from './useOnWindowResize.js';\nimport { useOnWindowScroll } from './useOnWindowScroll.js';\n\nfunction computeScrollPosition() {\r\n    if (typeof window === \"undefined\") {\r\n        return {\r\n            scrollX: 0,\r\n            scrollY: 0,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            scrollX: window.scrollX || window.pageXOffset,\r\n            scrollY: window.scrollY || window.pageYOffset,\r\n        };\r\n    }\r\n}\r\n/**\r\n *\r\n * useWindowScrollPosition hook\r\n * A React hook to get the scroll position of the window\r\n *\r\n * @returns an object containing scrollX and scrollY values\r\n * @see https://rooks.vercel.app/docs/useWindowScrollPosition\r\n */\r\nfunction useWindowScrollPosition() {\r\n    const [scrollPosition, setScrollPosition] = useState(computeScrollPosition);\r\n    /**\r\n     * Recalculate on scroll\r\n     */\r\n    useOnWindowScroll(() => {\r\n        setScrollPosition(computeScrollPosition());\r\n    }, true, true);\r\n    /**\r\n     * Recalculate on resize\r\n     */\r\n    useOnWindowResize(() => {\r\n        setScrollPosition(computeScrollPosition());\r\n    }, true, true);\r\n    return scrollPosition;\r\n}\n\nexport { useWindowScrollPosition };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAE1D,SAASC,qBAAqBA,CAAA,EAAG;EAC7B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/B,OAAO;MACHC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE;IACb,CAAC;EACL,CAAC,MACI;IACD,OAAO;MACHD,OAAO,EAAED,MAAM,CAACC,OAAO,IAAID,MAAM,CAACG,WAAW;MAC7CD,OAAO,EAAEF,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACI;IACtC,CAAC;EACL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAAA,EAAG;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAACG,qBAAqB,CAAC;EAC3E;AACJ;AACA;EACID,iBAAiB,CAAC,MAAM;IACpBS,iBAAiB,CAACR,qBAAqB,EAAE,CAAC;EAC9C,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;EACd;AACJ;AACA;EACIF,iBAAiB,CAAC,MAAM;IACpBU,iBAAiB,CAACR,qBAAqB,EAAE,CAAC;EAC9C,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;EACd,OAAOO,cAAc;AACzB;AAEA,SAASD,uBAAuB"},"metadata":{},"sourceType":"module"}
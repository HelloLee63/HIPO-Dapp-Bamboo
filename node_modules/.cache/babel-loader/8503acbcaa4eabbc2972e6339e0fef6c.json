{"ast":null,"code":"import { useState, useCallback } from 'react';\n\n/**\r\n * useRefElement hook for React\r\n * Helps bridge gap between callback ref and state\r\n * Manages the element called with callback ref api using state variable\r\n * @returns {[RefElementOrNull, (element: HTMLElementOrNull) => void]}\r\n * @see https://rooks.vercel.app/docs/useRefElement\r\n */\nfunction useRefElement() {\n  const [refElement, setRefElement] = useState(null);\n  const ref = useCallback(element => {\n    setRefElement(element);\n  }, []);\n  return [ref, refElement];\n}\nexport { useRefElement };","map":{"version":3,"names":["useState","useCallback","useRefElement","refElement","setRefElement","ref","element"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useRefElement.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n/**\r\n * useRefElement hook for React\r\n * Helps bridge gap between callback ref and state\r\n * Manages the element called with callback ref api using state variable\r\n * @returns {[RefElementOrNull, (element: HTMLElementOrNull) => void]}\r\n * @see https://rooks.vercel.app/docs/useRefElement\r\n */\r\nfunction useRefElement() {\r\n    const [refElement, setRefElement] = useState(null);\r\n    const ref = useCallback((element) => {\r\n        setRefElement(element);\r\n    }, []);\r\n    return [ref, refElement];\r\n}\n\nexport { useRefElement };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAAA,EAAG;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMK,GAAG,GAAGJ,WAAW,CAAEK,OAAO,IAAK;IACjCF,aAAa,CAACE,OAAO,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACD,GAAG,EAAEF,UAAU,CAAC;AAC5B;AAEA,SAASD,aAAa"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState } from 'react';\nimport { useIsomorphicEffect } from './useIsomorphicEffect.js';\nconst nullDimensions = {\n  innerHeight: null,\n  innerWidth: null,\n  outerHeight: null,\n  outerWidth: null\n};\nfunction getDimensions() {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  };\n}\n/**\r\n * useWindowSize hook\r\n * A hook that provides information of the dimensions of the window\r\n *\r\n * @returns Dimensions of the window\r\n * @see https://rooks.vercel.app/docs/useWindowSize\r\n */\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return nullDimensions;\n    } else {\n      return getDimensions();\n    }\n  });\n  function onResize() {\n    setWindowSize(getDimensions());\n  }\n  // set resize handler once on mount and clean before unmount\n  useIsomorphicEffect(() => {\n    if (typeof window === \"undefined\") {\n      return () => {};\n    } else {\n      window.addEventListener(\"resize\", onResize);\n      return () => {\n        window.removeEventListener(\"resize\", onResize);\n      };\n    }\n  }, []);\n  return windowSize;\n}\nexport { useWindowSize };","map":{"version":3,"names":["useState","useIsomorphicEffect","nullDimensions","innerHeight","innerWidth","outerHeight","outerWidth","getDimensions","window","useWindowSize","windowSize","setWindowSize","onResize","addEventListener","removeEventListener"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useWindowSize.js"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from './useIsomorphicEffect.js';\n\nconst nullDimensions = {\r\n    innerHeight: null,\r\n    innerWidth: null,\r\n    outerHeight: null,\r\n    outerWidth: null,\r\n};\r\nfunction getDimensions() {\r\n    return {\r\n        innerHeight: window.innerHeight,\r\n        innerWidth: window.innerWidth,\r\n        outerHeight: window.outerHeight,\r\n        outerWidth: window.outerWidth,\r\n    };\r\n}\r\n/**\r\n * useWindowSize hook\r\n * A hook that provides information of the dimensions of the window\r\n *\r\n * @returns Dimensions of the window\r\n * @see https://rooks.vercel.app/docs/useWindowSize\r\n */\r\nfunction useWindowSize() {\r\n    const [windowSize, setWindowSize] = useState(() => {\r\n        if (typeof window === \"undefined\") {\r\n            return nullDimensions;\r\n        }\r\n        else {\r\n            return getDimensions();\r\n        }\r\n    });\r\n    function onResize() {\r\n        setWindowSize(getDimensions());\r\n    }\r\n    // set resize handler once on mount and clean before unmount\r\n    useIsomorphicEffect(() => {\r\n        if (typeof window === \"undefined\") {\r\n            return () => { };\r\n        }\r\n        else {\r\n            window.addEventListener(\"resize\", onResize);\r\n            return () => {\r\n                window.removeEventListener(\"resize\", onResize);\r\n            };\r\n        }\r\n    }, []);\r\n    return windowSize;\r\n}\n\nexport { useWindowSize };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,cAAc,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAE;AAChB,CAAC;AACD,SAASC,aAAaA,CAAA,EAAG;EACrB,OAAO;IACHJ,WAAW,EAAEK,MAAM,CAACL,WAAW;IAC/BC,UAAU,EAAEI,MAAM,CAACJ,UAAU;IAC7BC,WAAW,EAAEG,MAAM,CAACH,WAAW;IAC/BC,UAAU,EAAEE,MAAM,CAACF;EACvB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,aAAaA,CAAA,EAAG;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC/C,IAAI,OAAOQ,MAAM,KAAK,WAAW,EAAE;MAC/B,OAAON,cAAc;IACzB,CAAC,MACI;MACD,OAAOK,aAAa,EAAE;IAC1B;EACJ,CAAC,CAAC;EACF,SAASK,QAAQA,CAAA,EAAG;IAChBD,aAAa,CAACJ,aAAa,EAAE,CAAC;EAClC;EACA;EACAN,mBAAmB,CAAC,MAAM;IACtB,IAAI,OAAOO,MAAM,KAAK,WAAW,EAAE;MAC/B,OAAO,MAAM,CAAE,CAAC;IACpB,CAAC,MACI;MACDA,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAED,QAAQ,CAAC;MAC3C,OAAO,MAAM;QACTJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;MAClD,CAAC;IACL;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,UAAU;AACrB;AAEA,SAASD,aAAa"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { noop } from '../utils/noop.js';\nimport { useState, useRef, useEffect, useCallback } from 'react';\nconst config = {\n  box: \"content-box\"\n};\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://rooks.vercel.app/docs/useResizeObserverRef\r\n */\nfunction useResizeObserverRef(callback) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config;\n  const {\n    box\n  } = options;\n  const [node, setNode] = useState(null);\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  const handleResizeObserver = useCallback(function () {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, ...args);\n  }, []);\n  useEffect(() => {\n    if (node) {\n      // Create an observer instance linked to the callback function\n      const observer = new ResizeObserver(handleResizeObserver);\n      // Start observing the target node for resizes\n      observer.observe(node, {\n        box\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n    return noop;\n  }, [node, handleResizeObserver, box]);\n  const ref = useCallback(node => {\n    setNode(node);\n  }, []);\n  return [ref];\n}\nexport { useResizeObserverRef };","map":{"version":3,"names":["noop","useState","useRef","useEffect","useCallback","config","box","useResizeObserverRef","callback","options","arguments","length","undefined","node","setNode","callbackRef","current","handleResizeObserver","_a","_len","args","Array","_key","call","observer","ResizeObserver","observe","disconnect","ref"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useResizeObserverRef.js"],"sourcesContent":["import { noop } from '../utils/noop.js';\nimport { useState, useRef, useEffect, useCallback } from 'react';\n\nconst config = {\r\n    box: \"content-box\",\r\n};\r\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://rooks.vercel.app/docs/useResizeObserverRef\r\n */\r\nfunction useResizeObserverRef(callback, options = config) {\r\n    const { box } = options;\r\n    const [node, setNode] = useState(null);\r\n    const callbackRef = useRef(callback);\r\n    useEffect(() => {\r\n        callbackRef.current = callback;\r\n    });\r\n    const handleResizeObserver = useCallback((...args) => {\r\n        var _a;\r\n        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, ...args);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (node) {\r\n            // Create an observer instance linked to the callback function\r\n            const observer = new ResizeObserver(handleResizeObserver);\r\n            // Start observing the target node for resizes\r\n            observer.observe(node, { box });\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        }\r\n        return noop;\r\n    }, [node, handleResizeObserver, box]);\r\n    const ref = useCallback((node) => {\r\n        setNode(node);\r\n    }, []);\r\n    return [ref];\r\n}\n\nexport { useResizeObserverRef };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,QAAQ,EAAoB;EAAA,IAAlBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,MAAM;EACpD,MAAM;IAAEC;EAAI,CAAC,GAAGG,OAAO;EACvB,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,WAAW,GAAGb,MAAM,CAACM,QAAQ,CAAC;EACpCL,SAAS,CAAC,MAAM;IACZY,WAAW,CAACC,OAAO,GAAGR,QAAQ;EAClC,CAAC,CAAC;EACF,MAAMS,oBAAoB,GAAGb,WAAW,CAAC,YAAa;IAClD,IAAIc,EAAE;IAAC,SAAAC,IAAA,GAAAT,SAAA,CAAAC,MAAA,EADkCS,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAZ,SAAA,CAAAY,IAAA;IAAA;IAE7C,CAACJ,EAAE,GAAGH,WAAW,CAACC,OAAO,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,IAAI,CAACR,WAAW,EAAE,GAAGK,IAAI,CAAC;EACjG,CAAC,EAAE,EAAE,CAAC;EACNjB,SAAS,CAAC,MAAM;IACZ,IAAIU,IAAI,EAAE;MACN;MACA,MAAMW,QAAQ,GAAG,IAAIC,cAAc,CAACR,oBAAoB,CAAC;MACzD;MACAO,QAAQ,CAACE,OAAO,CAACb,IAAI,EAAE;QAAEP;MAAI,CAAC,CAAC;MAC/B,OAAO,MAAM;QACTkB,QAAQ,CAACG,UAAU,EAAE;MACzB,CAAC;IACL;IACA,OAAO3B,IAAI;EACf,CAAC,EAAE,CAACa,IAAI,EAAEI,oBAAoB,EAAEX,GAAG,CAAC,CAAC;EACrC,MAAMsB,GAAG,GAAGxB,WAAW,CAAES,IAAI,IAAK;IAC9BC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACe,GAAG,CAAC;AAChB;AAEA,SAASrB,oBAAoB"},"metadata":{},"sourceType":"module"}
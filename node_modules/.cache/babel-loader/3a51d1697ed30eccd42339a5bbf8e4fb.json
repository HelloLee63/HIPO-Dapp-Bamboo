{"ast":null,"code":"import { useState, useCallback, useMemo, useRef, useEffect } from 'react';\nimport { doesIdentifierMatchKeyboardEvent } from '../utils/doesIdentifierMatchKeyboardEvent.js';\nimport { noop } from '../utils/noop.js';\nconst defaultOptions = {\n  eventTypes: [\"keydown\"],\n  when: true\n};\n/**\r\n * useKeyRef hook\r\n *\r\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\r\n *\r\n * @param {[string|number]} keys List of keys to listen for. Eg: [\"a\", \"b\"]\r\n * @param {Function} callback Callback to fire on keyboard events\r\n * @param {Options} options Options\r\n * @returns {CallbackRef} CallbackRef\r\n * @see https://rooks.vercel.app/docs/useKeyRef\r\n */\nfunction useKeyRef(keys, callback, options) {\n  const [targetNode, setTargetNode] = useState(null);\n  const ref = useCallback(node => {\n    setTargetNode(node);\n  }, []);\n  const keyList = useMemo(() => {\n    if (Array.isArray(keys)) {\n      return keys;\n    } else {\n      return [keys];\n    }\n  }, [keys]);\n  const internalOptions = useMemo(() => {\n    return Object.assign(Object.assign({}, defaultOptions), options);\n  }, [options]);\n  const {\n    when,\n    eventTypes\n  } = internalOptions;\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  const handle = useCallback(event => {\n    if (keyList.some(identifier => doesIdentifierMatchKeyboardEvent(event, identifier))) {\n      callbackRef.current(event);\n    }\n  }, [keyList]);\n  useEffect(() => {\n    if (when && targetNode) {\n      for (const eventType of eventTypes) {\n        // eslint-disable-next-line prefer-arrow-callback\n        targetNode.addEventListener(eventType, handle);\n      }\n      return () => {\n        for (const eventType of eventTypes) {\n          targetNode.removeEventListener(eventType, handle);\n        }\n      };\n    }\n    return noop;\n  }, [targetNode, when, eventTypes, keyList, handle]);\n  return ref;\n}\nexport { useKeyRef };","map":{"version":3,"names":["useState","useCallback","useMemo","useRef","useEffect","doesIdentifierMatchKeyboardEvent","noop","defaultOptions","eventTypes","when","useKeyRef","keys","callback","options","targetNode","setTargetNode","ref","node","keyList","Array","isArray","internalOptions","Object","assign","callbackRef","current","handle","event","some","identifier","eventType","addEventListener","removeEventListener"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useKeyRef.js"],"sourcesContent":["import { useState, useCallback, useMemo, useRef, useEffect } from 'react';\nimport { doesIdentifierMatchKeyboardEvent } from '../utils/doesIdentifierMatchKeyboardEvent.js';\nimport { noop } from '../utils/noop.js';\n\nconst defaultOptions = {\r\n    eventTypes: [\"keydown\"],\r\n    when: true,\r\n};\r\n/**\r\n * useKeyRef hook\r\n *\r\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\r\n *\r\n * @param {[string|number]} keys List of keys to listen for. Eg: [\"a\", \"b\"]\r\n * @param {Function} callback Callback to fire on keyboard events\r\n * @param {Options} options Options\r\n * @returns {CallbackRef} CallbackRef\r\n * @see https://rooks.vercel.app/docs/useKeyRef\r\n */\r\nfunction useKeyRef(keys, callback, options) {\r\n    const [targetNode, setTargetNode] = useState(null);\r\n    const ref = useCallback((node) => {\r\n        setTargetNode(node);\r\n    }, []);\r\n    const keyList = useMemo(() => {\r\n        if (Array.isArray(keys)) {\r\n            return keys;\r\n        }\r\n        else {\r\n            return [keys];\r\n        }\r\n    }, [keys]);\r\n    const internalOptions = useMemo(() => {\r\n        return Object.assign(Object.assign({}, defaultOptions), options);\r\n    }, [options]);\r\n    const { when, eventTypes } = internalOptions;\r\n    const callbackRef = useRef(callback);\r\n    useEffect(() => {\r\n        callbackRef.current = callback;\r\n    });\r\n    const handle = useCallback((event) => {\r\n        if (keyList.some((identifier) => doesIdentifierMatchKeyboardEvent(event, identifier))) {\r\n            callbackRef.current(event);\r\n        }\r\n    }, [keyList]);\r\n    useEffect(() => {\r\n        if (when && targetNode) {\r\n            for (const eventType of eventTypes) {\r\n                // eslint-disable-next-line prefer-arrow-callback\r\n                targetNode.addEventListener(eventType, handle);\r\n            }\r\n            return () => {\r\n                for (const eventType of eventTypes) {\r\n                    targetNode.removeEventListener(eventType, handle);\r\n                }\r\n            };\r\n        }\r\n        return noop;\r\n    }, [targetNode, when, eventTypes, keyList, handle]);\r\n    return ref;\r\n}\n\nexport { useKeyRef };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,gCAAgC,QAAQ,8CAA8C;AAC/F,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,cAAc,GAAG;EACnBC,UAAU,EAAE,CAAC,SAAS,CAAC;EACvBC,IAAI,EAAE;AACV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMgB,GAAG,GAAGf,WAAW,CAAEgB,IAAI,IAAK;IAC9BF,aAAa,CAACE,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,OAAO,GAAGhB,OAAO,CAAC,MAAM;IAC1B,IAAIiB,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE;MACrB,OAAOA,IAAI;IACf,CAAC,MACI;MACD,OAAO,CAACA,IAAI,CAAC;IACjB;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACV,MAAMU,eAAe,GAAGnB,OAAO,CAAC,MAAM;IAClC,OAAOoB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhB,cAAc,CAAC,EAAEM,OAAO,CAAC;EACpE,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,MAAM;IAAEJ,IAAI;IAAED;EAAW,CAAC,GAAGa,eAAe;EAC5C,MAAMG,WAAW,GAAGrB,MAAM,CAACS,QAAQ,CAAC;EACpCR,SAAS,CAAC,MAAM;IACZoB,WAAW,CAACC,OAAO,GAAGb,QAAQ;EAClC,CAAC,CAAC;EACF,MAAMc,MAAM,GAAGzB,WAAW,CAAE0B,KAAK,IAAK;IAClC,IAAIT,OAAO,CAACU,IAAI,CAAEC,UAAU,IAAKxB,gCAAgC,CAACsB,KAAK,EAAEE,UAAU,CAAC,CAAC,EAAE;MACnFL,WAAW,CAACC,OAAO,CAACE,KAAK,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EACbd,SAAS,CAAC,MAAM;IACZ,IAAIK,IAAI,IAAIK,UAAU,EAAE;MACpB,KAAK,MAAMgB,SAAS,IAAItB,UAAU,EAAE;QAChC;QACAM,UAAU,CAACiB,gBAAgB,CAACD,SAAS,EAAEJ,MAAM,CAAC;MAClD;MACA,OAAO,MAAM;QACT,KAAK,MAAMI,SAAS,IAAItB,UAAU,EAAE;UAChCM,UAAU,CAACkB,mBAAmB,CAACF,SAAS,EAAEJ,MAAM,CAAC;QACrD;MACJ,CAAC;IACL;IACA,OAAOpB,IAAI;EACf,CAAC,EAAE,CAACQ,UAAU,EAAEL,IAAI,EAAED,UAAU,EAAEU,OAAO,EAAEQ,MAAM,CAAC,CAAC;EACnD,OAAOV,GAAG;AACd;AAEA,SAASN,SAAS"},"metadata":{},"sourceType":"module"}
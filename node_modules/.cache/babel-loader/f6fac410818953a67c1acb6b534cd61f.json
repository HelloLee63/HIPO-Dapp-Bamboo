{"ast":null,"code":"import { useDidMount } from './useDidMount.js';\nimport { useDidUpdate } from './useDidUpdate.js';\nimport { useWillUnmount } from './useWillUnmount.js';\n\n/**\r\n * useLifecycleLogger hook\r\n * logs parameters as component transitions through lifecycles\r\n *\r\n * @param componentName Name of the component\r\n * @param {...*} otherArgs Other arguments to log\r\n * @see https://rooks.vercel.app/docs/useLifecycleLogger\r\n */\nconst useLifecycleLogger = function () {\n  let componentName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Component\";\n  for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherArgs[_key - 1] = arguments[_key];\n  }\n  useDidMount(() => {\n    console.log(`${componentName} mounted`, ...otherArgs);\n    return () => console.log(`${componentName} unmounted`);\n  });\n  useDidUpdate(() => {\n    console.log(`${componentName} updated`, ...otherArgs);\n  });\n  useWillUnmount(() => {\n    console.log(`${componentName} unmounted`);\n  });\n};\nexport { useLifecycleLogger };","map":{"version":3,"names":["useDidMount","useDidUpdate","useWillUnmount","useLifecycleLogger","componentName","arguments","length","undefined","_len","otherArgs","Array","_key","console","log"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useLifecycleLogger.js"],"sourcesContent":["import { useDidMount } from './useDidMount.js';\nimport { useDidUpdate } from './useDidUpdate.js';\nimport { useWillUnmount } from './useWillUnmount.js';\n\n/**\r\n * useLifecycleLogger hook\r\n * logs parameters as component transitions through lifecycles\r\n *\r\n * @param componentName Name of the component\r\n * @param {...*} otherArgs Other arguments to log\r\n * @see https://rooks.vercel.app/docs/useLifecycleLogger\r\n */\r\nconst useLifecycleLogger = (componentName = \"Component\", ...otherArgs) => {\r\n    useDidMount(() => {\r\n        console.log(`${componentName} mounted`, ...otherArgs);\r\n        return () => console.log(`${componentName} unmounted`);\r\n    });\r\n    useDidUpdate(() => {\r\n        console.log(`${componentName} updated`, ...otherArgs);\r\n    });\r\n    useWillUnmount(() => {\r\n        console.log(`${componentName} unmounted`);\r\n    });\r\n};\n\nexport { useLifecycleLogger };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG,SAAAA,CAAA,EAA+C;EAAA,IAA9CC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,WAAW;EAAA,SAAAG,IAAA,GAAAH,SAAA,CAAAC,MAAA,EAAKG,SAAS,OAAAC,KAAA,CAAAF,IAAA,OAAAA,IAAA,WAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAATF,SAAS,CAAAE,IAAA,QAAAN,SAAA,CAAAM,IAAA;EAAA;EACjEX,WAAW,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAE,GAAET,aAAc,UAAS,EAAE,GAAGK,SAAS,CAAC;IACrD,OAAO,MAAMG,OAAO,CAACC,GAAG,CAAE,GAAET,aAAc,YAAW,CAAC;EAC1D,CAAC,CAAC;EACFH,YAAY,CAAC,MAAM;IACfW,OAAO,CAACC,GAAG,CAAE,GAAET,aAAc,UAAS,EAAE,GAAGK,SAAS,CAAC;EACzD,CAAC,CAAC;EACFP,cAAc,CAAC,MAAM;IACjBU,OAAO,CAACC,GAAG,CAAE,GAAET,aAAc,YAAW,CAAC;EAC7C,CAAC,CAAC;AACN,CAAC;AAED,SAASD,kBAAkB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import BigNumber from \"bignumber.js\";\nexport function getExponentValue() {\n  let decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new BigNumber(10).pow(decimals);\n}\nexport function getHumanValue(value) {\n  var _BigNumber;\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return (_BigNumber = new BigNumber(value)) === null || _BigNumber === void 0 ? void 0 : _BigNumber.div(getExponentValue(decimals));\n}\nexport function getNonHumanValue(value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return new BigNumber(value).multipliedBy(getExponentValue(decimals));\n}\nexport function getGasValue(price) {\n  return getNonHumanValue(price, 9).toNumber();\n}\nexport function formatBigValue(value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  let defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '-';\n  let minDecimals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  if (value === undefined) {\n    return defaultValue;\n  }\n  const bnValue = new BigNumber(value);\n  if (isNaN(bnValue)) {\n    return defaultValue;\n  }\n  return new BigNumber(bnValue.toFixed(decimals)).toFormat(minDecimals);\n}\nexport function formatToken(value, options) {\n  if (value === undefined || value === null || Number.isNaN(value)) {\n    return undefined;\n  }\n  let val = new BigNumber(value);\n  if (val.isNaN()) {\n    return undefined;\n  }\n  if (options) {\n    if (options.hasOwnProperty('scale') && options.scale === undefined) {\n      return undefined;\n    }\n  }\n  const {\n    tokenName,\n    compact = false,\n    decimals = 4,\n    minDecimals,\n    scale = 0,\n    hasLess = false\n  } = options !== null && options !== void 0 ? options : {};\n  if (scale > 0) {\n    val = unscaleBy(val, scale);\n  }\n  let str = '';\n  if (hasLess) {\n    if (val.gt(new BigNumber(0)) && val.lt(1 / 10 ** decimals)) {\n      str += '> ';\n    }\n  }\n  if (compact && val.gt(1000)) {\n    str += Intl.NumberFormat('en', {\n      notation: 'compact',\n      maximumFractionDigits: 2\n    }).format(val.toNumber());\n  } else {\n    str += new BigNumber(val.toFixed(decimals)).toFormat(minDecimals);\n  }\n  if (tokenName) {\n    str += ` ${tokenName}`;\n  }\n  return str;\n}\nexport function unscaleBy(BigValue, decimals) {\n  if (decimals === undefined) {\n    return undefined;\n  }\n  if (BigValue === undefined) {\n    return undefined;\n  }\n  const value = new BigNumber(BigValue);\n  const divider = new BigNumber((10 ** decimals).toString());\n  return value.div(divider);\n}\nexport function scaleBy(value, decimals) {\n  if (decimals === undefined) {\n    return undefined;\n  }\n  if (value === undefined) {\n    return undefined;\n  }\n  const BigValue = new BigNumber(value);\n  const multiper = new BigNumber(10 ** decimals);\n  return BigValue.multipliedBy(multiper);\n}\nexport function calAPY(value, decimals, duration) {\n  if (decimals === undefined) {\n    return undefined;\n  }\n  if (value === undefined) {\n    return undefined;\n  }\n  if (new BigNumber(value).eq(0)) {\n    return 0;\n  }\n  let BigValue = new BigNumber(value);\n  let BigValueOne = new BigNumber(1);\n  BigValueOne = scaleBy(BigValueOne, decimals, duration);\n  let APY = BigValueOne.minus(BigValue).div(duration).multipliedBy(365 * 24 * 60 * 60);\n  return formatToken(APY, {\n    decimals: 8,\n    scale: decimals\n  });\n}\nexport function formatPercent(value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (value === undefined || Number.isNaN(value)) {\n    return undefined;\n  }\n  const rate = BigNumber.isBigNumber(value) ? value.toNumber() : value;\n  return Intl.NumberFormat('en', {\n    style: 'percent',\n    maximumFractionDigits: decimals\n  }).format(rate);\n}\nexport function shortenAddr(addr) {\n  let first = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  let last = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  return addr ? [String(addr).slice(0, first), String(addr).slice(-last)].join('...') : undefined;\n}","map":{"version":3,"names":["BigNumber","getExponentValue","decimals","arguments","length","undefined","pow","getHumanValue","value","_BigNumber","div","getNonHumanValue","multipliedBy","getGasValue","price","toNumber","formatBigValue","defaultValue","minDecimals","bnValue","isNaN","toFixed","toFormat","formatToken","options","Number","val","hasOwnProperty","scale","tokenName","compact","hasLess","unscaleBy","str","gt","lt","Intl","NumberFormat","notation","maximumFractionDigits","format","BigValue","divider","toString","scaleBy","multiper","calAPY","duration","eq","BigValueOne","APY","minus","formatPercent","rate","isBigNumber","style","shortenAddr","addr","first","last","String","slice","join"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/helpers/utils.js"],"sourcesContent":["import BigNumber from \"bignumber.js\";\n\nexport function getExponentValue(decimals = 0) {\n    return new BigNumber(10).pow(decimals);\n  }\n  \n  export function getHumanValue(value, decimals = 0) {\n    return new BigNumber(value)?.div(getExponentValue(decimals));\n  }\n  \n  export function getNonHumanValue(value, decimals = 0) {\n    return new BigNumber(value).multipliedBy(getExponentValue(decimals));\n  }\n  \n  export function getGasValue(price) {\n    return getNonHumanValue(price, 9).toNumber();\n  }\n\n  export function formatBigValue(\n    value,\n    decimals = 4,\n    defaultValue = '-',\n    minDecimals = undefined,\n  ) {\n    if (value === undefined) {\n      return defaultValue;\n    }\n      \n    const bnValue = new BigNumber(value);\n  \n    if (isNaN(bnValue)) {\n      return defaultValue;\n    }\n\n    return new BigNumber(bnValue.toFixed(decimals)).toFormat(minDecimals)\n  }\n\n  export function formatToken(\n    value,\n    options\n  ) {\n    if (value === undefined || value === null || Number.isNaN(value)) {\n      return undefined;\n    }\n  \n    let val = new BigNumber(value);\n  \n    if (val.isNaN()) {\n      return undefined;\n    }\n  \n    if (options) {\n      if (options.hasOwnProperty('scale') && options.scale === undefined) {\n        return undefined;\n      }\n    }\n  \n    const { tokenName, compact = false, decimals = 4, minDecimals, scale = 0, hasLess = false } = options ?? {};\n  \n    if (scale > 0) {\n      val = unscaleBy(val, scale);\n    }\n  \n    let str = '';\n  \n    if (hasLess) {\n      if (val.gt(new BigNumber(0)) && val.lt(1 / 10 ** decimals)) {\n        str += '> ';\n      }\n    }\n  \n    if (compact && val.gt(1_000)) {\n      str += Intl.NumberFormat('en', {\n        notation: 'compact',\n        maximumFractionDigits: 2,\n      }).format(val.toNumber());\n    } else {\n      str += new BigNumber(val.toFixed(decimals)).toFormat(minDecimals);\n    }\n  \n    if (tokenName) {\n      str += ` ${tokenName}`;\n    }\n  \n    return str;\n  }\n\n  export function unscaleBy(BigValue, decimals) {\n\n    if (decimals === undefined) {\n      return undefined\n    }\n\n    if(BigValue === undefined) {\n      return undefined\n    }\n\n    const value = new BigNumber(BigValue)\n    const divider = new BigNumber((10 ** decimals).toString())\n\n    return value.div(divider)\n  }\n\n  export function scaleBy(value, decimals) {\n    if (decimals === undefined) {\n      return undefined\n    }\n\n    if (value === undefined) {\n      return undefined\n    }\n\n    const BigValue = new BigNumber(value)\n    const multiper = new BigNumber(10 ** decimals)\n\n    return BigValue.multipliedBy(multiper)\n  }\n\n  export function calAPY(value, decimals, duration) {\n    if (decimals === undefined) {\n      return undefined\n    }\n\n    if (value === undefined) {\n      return undefined\n    }\n\n    if (new BigNumber(value).eq(0)) {\n      return 0\n    }\n\n    let BigValue = new BigNumber(value)\n    let BigValueOne = new BigNumber(1)\n\n    BigValueOne = scaleBy(BigValueOne, decimals, duration)\n    let APY = (BigValueOne.minus(BigValue)).div(duration).multipliedBy(365 * 24 * 60 * 60)\n\n    return formatToken(APY, {decimals: 8, scale: decimals})\n  }\n\n  export function formatPercent(value, decimals = 2) {\n    if(value === undefined || Number.isNaN(value)) {\n      return undefined\n    }\n\n    const rate = BigNumber.isBigNumber(value) ? value.toNumber() : value\n\n    return Intl.NumberFormat('en', {\n      style: 'percent',\n      maximumFractionDigits: decimals,\n    }).format(rate)\n  }\n\n  export function shortenAddr(addr, first = 6, last = 4) {\n    return addr ? [String(addr).slice(0, first), String(addr).slice(-last)].join('...') : undefined;\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}
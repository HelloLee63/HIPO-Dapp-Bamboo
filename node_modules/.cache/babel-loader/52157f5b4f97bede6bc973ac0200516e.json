{"ast":null,"code":"import raf from 'raf';\nimport { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * useRaf\r\n * Uses a polyfilled version of requestAnimationFrame\r\n *\r\n * @param {Function} callback The callback function to be executed\r\n * @param {boolean} [isActive] The value which while true, keeps the raf running infinitely\r\n * @see https://rooks.vercel.app/docs/useRaf\r\n */\nfunction useRaf(callback, isActive) {\n  const savedCallback = useRef();\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    let animationFrame;\n    let startTime = Date.now();\n    function tick() {\n      var _a;\n      const timeElapsed = Date.now() - startTime;\n      startTime = Date.now();\n      loop();\n      (_a = savedCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedCallback, timeElapsed);\n    }\n    function loop() {\n      animationFrame = raf(tick);\n    }\n    if (isActive) {\n      startTime = Date.now();\n      loop();\n      return () => {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n      };\n    } else {\n      return noop;\n    }\n  }, [isActive]);\n}\nexport { useRaf };","map":{"version":3,"names":["raf","useRef","useEffect","noop","useRaf","callback","isActive","savedCallback","current","animationFrame","startTime","Date","now","tick","_a","timeElapsed","loop","call","cancel"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useRaf.js"],"sourcesContent":["import raf from 'raf';\nimport { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * useRaf\r\n * Uses a polyfilled version of requestAnimationFrame\r\n *\r\n * @param {Function} callback The callback function to be executed\r\n * @param {boolean} [isActive] The value which while true, keeps the raf running infinitely\r\n * @see https://rooks.vercel.app/docs/useRaf\r\n */\r\nfunction useRaf(callback, isActive) {\r\n    const savedCallback = useRef();\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n    useEffect(() => {\r\n        let animationFrame;\r\n        let startTime = Date.now();\r\n        function tick() {\r\n            var _a;\r\n            const timeElapsed = Date.now() - startTime;\r\n            startTime = Date.now();\r\n            loop();\r\n            (_a = savedCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedCallback, timeElapsed);\r\n        }\r\n        function loop() {\r\n            animationFrame = raf(tick);\r\n        }\r\n        if (isActive) {\r\n            startTime = Date.now();\r\n            loop();\r\n            return () => {\r\n                if (animationFrame) {\r\n                    raf.cancel(animationFrame);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return noop;\r\n        }\r\n    }, [isActive]);\r\n}\n\nexport { useRaf };\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAChC,MAAMC,aAAa,GAAGN,MAAM,EAAE;EAC9B;EACAC,SAAS,CAAC,MAAM;IACZK,aAAa,CAACC,OAAO,GAAGH,QAAQ;EACpC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACdH,SAAS,CAAC,MAAM;IACZ,IAAIO,cAAc;IAClB,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;IAC1B,SAASC,IAAIA,CAAA,EAAG;MACZ,IAAIC,EAAE;MACN,MAAMC,WAAW,GAAGJ,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS;MAC1CA,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;MACtBI,IAAI,EAAE;MACN,CAACF,EAAE,GAAGP,aAAa,CAACC,OAAO,MAAM,IAAI,IAAIM,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,IAAI,CAACV,aAAa,EAAEQ,WAAW,CAAC;IACzG;IACA,SAASC,IAAIA,CAAA,EAAG;MACZP,cAAc,GAAGT,GAAG,CAACa,IAAI,CAAC;IAC9B;IACA,IAAIP,QAAQ,EAAE;MACVI,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;MACtBI,IAAI,EAAE;MACN,OAAO,MAAM;QACT,IAAIP,cAAc,EAAE;UAChBT,GAAG,CAACkB,MAAM,CAACT,cAAc,CAAC;QAC9B;MACJ,CAAC;IACL,CAAC,MACI;MACD,OAAON,IAAI;IACf;EACJ,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;AAClB;AAEA,SAASF,MAAM"},"metadata":{},"sourceType":"module"}
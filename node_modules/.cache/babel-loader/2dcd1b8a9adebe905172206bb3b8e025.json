{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/wallet/WalletProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { UnsupportedChainIdError, useWeb3React, Web3ReactProvider } from \"@web3-react/core\";\nimport { NoEthereumProviderError, UserRejectedRequestError } from \"@web3-react/injected-connector\";\nimport BigNumber from \"bignumber.js\";\nimport { ethers } from \"ethers\";\nimport { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useSessionStorage } from \"react-use-storage\";\nimport Web3 from \"web3\";\nimport EventEmitter from \"wolfy87-eventemitter\";\nimport { useChain } from \"../chain/ChainProvider\";\n// import Modal from \"../components/modal/Modal\";\n// import InstallMetamaskModal from \"./components/install-metamask-modal/InstallMetamaskModal\";\n// import SelectWalletModal from \"./components/select-wallet-modal/SelectWalletModal\";\n// import SwitchChainModal from \"./components/switch-chain-modal/SwitchChainModal\";\nimport MetamaskWalletConfig from \"./connectors/metamask/MetamaskConnector\";\n\n/* \n  Create wallet hook: useWallet() \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\nexport function useWallet() {\n  _s();\n  return useContext(Context);\n}\n\n/* \n  Add other wallet connector \n*/\n_s(useWallet, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const WalletConnectors = [MetamaskWalletConfig];\nconst Web3WalletProvider = props => {\n  _s2();\n  var _web3React$account;\n  const {\n    children\n  } = props;\n  const {\n    activeChain\n  } = useChain();\n  const web3React = useWeb3React();\n  const [sessionProvider, setSessionProvider, removeSessionProvider] = useSessionStorage('wallet_provider');\n  const event = useMemo(() => new EventEmitter(), []);\n  const [connecting, setConnecting] = useState();\n  const [initialized, setInitialized] = useState(false);\n  const connectingRef = useRef(connecting);\n\n  /* \n    TODO: Test: Is it possible to remove this line \n  */\n\n  connectingRef.current = connecting;\n  const [activeMeta, setActiveMeta] = useState();\n\n  /* \n    Account states \n  */\n\n  const [ethBalance, setEthBalance] = useState();\n  const [ensName, setENSName] = useState();\n  const [ensAvatar, setENSAvatar] = useState();\n\n  /* \n    Modal controllers \n  */\n\n  // const [connectWalletModal, setConnectWalletModal] = useState(false);\n  // const [installMetaMaskModal, setInstallMetaMaskModal] = useState(false);\n  // const [unsupportedChainModal, setUnsupportedChainModal] = useState(false);\n  // const [userRejectedModal, setUserRejectedModal] = useState(false);\n\n  /* \n    \n  */\n\n  const preConnectedAccount = useRef(web3React.account);\n  if (preConnectedAccount.current !== web3React.account) {\n    preConnectedAccount.current = web3React.account;\n    event.emit('UPDATE_ACCOUNT', web3React.account);\n  }\n\n  /* \n    Disconnect wallet handler \n  */\n\n  const disconnect = useCallback(() => {\n    var _activeMeta$onDisconn;\n    web3React.deactivate();\n    activeMeta === null || activeMeta === void 0 ? void 0 : (_activeMeta$onDisconn = activeMeta.onDisconnect) === null || _activeMeta$onDisconn === void 0 ? void 0 : _activeMeta$onDisconn.call(activeMeta, web3React.connector);\n    setConnecting(undefined);\n    setActiveMeta(undefined);\n    setEthBalance(undefined);\n    removeSessionProvider();\n  }, [web3React, activeMeta, removeSessionProvider, setConnecting, setActiveMeta, setEthBalance]);\n\n  /* \n    Connect wallet handler \n  */\n\n  const connect = useCallback(async walletConfig => {\n    /* The status of connecting */\n\n    if (connectingRef.current) {\n      return;\n    }\n    connectingRef.current = walletConfig;\n    setConnecting(walletConfig);\n\n    // setConnectWalletModal(false);\n    // setInstallMetaMaskModal(false);\n    // setUnsupportedChainModal(false);\n    // setUserRejectedModal(false);\n\n    const connector = walletConfig.factory(activeChain);\n\n    /* Errors handlers: \n    /* No wallet available, \n    /* unsupported chain, \n    /* user rejected connection request, \n    /* and other errors. */\n\n    function onError(error) {\n      if (error instanceof NoEthereumProviderError) {\n        // setInstallMetaMaskModal(true)\n        disconnect();\n      } else if (error instanceof UnsupportedChainIdError) {\n        // setUnsupportedChainModal(true)\n        disconnect();\n      } else if (error instanceof UserRejectedRequestError) {\n        // setUserRejectedModal(true)\n        disconnect();\n      } else {\n        var _walletConfig$onError;\n        const err = (_walletConfig$onError = walletConfig.onError) === null || _walletConfig$onError === void 0 ? void 0 : _walletConfig$onError.call(walletConfig, error);\n        if (err) {\n          console.log(err.message);\n        }\n        disconnect();\n      }\n    }\n    function onSuccess() {\n      var _walletConfig$onConne;\n      if (!connectingRef.current) {\n        return;\n      }\n      (_walletConfig$onConne = walletConfig.onConnect) === null || _walletConfig$onConne === void 0 ? void 0 : _walletConfig$onConne.call(walletConfig, connector);\n      setActiveMeta(walletConfig);\n      setSessionProvider(walletConfig.id);\n    }\n    await web3React.activate(connector, undefined, true).then(onSuccess).catch(onError);\n    setConnecting(undefined);\n\n    // try {\n\n    //   const currentProviderChainId = await connector.getChainId()\n\n    //   if(currentProviderChainId === activeNetwork.metamaskChain.chainId) {\n    //     await web3React.activate(connector, undefined, true)\n    //       .then(onSuccess)\n    //       .catch(onError)\n    //   } else {\n    //     setUnsupportedChainModal(true);\n    //   }\n\n    //   setConnecting(undefined);\n\n    // } catch(error) {\n    //   if(error instanceof NoEthereumProviderError) {\n    //     setInstallMetaMaskModal(true)\n    //     disconnect()\n    //   }\n    // }       \n  }, [web3React, connectingRef, setConnecting, setSessionProvider, activeNetwork, disconnect]);\n  const changeChain = async setError => {\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n      if (activeChain.meta.chainId === 1 || activeNetwork.meta.chainId === 5) {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{\n            \"chainId\": `0x${Number(activeNetwork.meta.chainId).toString(16)}`\n          }]\n        });\n      } else {\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            \"chainId\": `0x${Number(activeNetwork.meta.chainId).toString(16)}`\n          }]\n        });\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  /* \n    Use effect to update the account states \n  */\n\n  useEffect(() => {\n    /* Reset account states to undefined */\n\n    setEthBalance(undefined);\n    setENSName(undefined);\n    setENSAvatar(undefined);\n    const account = web3React.account;\n    if (account && Web3.utils.isAddress(account)) {\n      const ethWeb3 = new Web3(web3React.library);\n\n      /* Balance of the account */\n\n      ethWeb3.eth.getBalance(account).then(value => {\n        setEthBalance(value ? new BigNumber(value) : undefined);\n      }).catch(Error);\n\n      /* ENS name and avatar of the account */\n\n      const provider = new ethers.providers.JsonRpcProvider(activeNetwork.rpc.httpsUrl);\n      provider.lookupAddress(account).then(value => {\n        setENSName(value !== null && value !== void 0 ? value : undefined);\n        if (value) {\n          provider.getAvatar(value !== null && value !== void 0 ? value : '').then(value => {\n            setENSAvatar(value !== null && value !== void 0 ? value : undefined);\n          }).catch(Error);\n        }\n      }).catch(Error);\n    }\n  }, [web3React.account, activeChain, web3React.library]);\n\n  /* \n    Accroding to session to restore states of the account \n  */\n\n  useEffect(() => {\n    (async () => {\n      if (sessionProvider) {\n        const walletConnector = WalletConnectors.find(conn => conn.id === sessionProvider);\n        if (walletConnector) {\n          await connect(walletConnector);\n        }\n      }\n      setInitialized(true);\n    })();\n  }, []);\n  const value = {\n    initialized,\n    connecting,\n    isActive: web3React.active,\n    account: (_web3React$account = web3React.account) !== null && _web3React$account !== void 0 ? _web3React$account : undefined,\n    meta: activeMeta,\n    connector: web3React.connector,\n    provider: web3React.library,\n    ethBalance,\n    connect,\n    disconnect,\n    showWalletsModal: () => {\n      // setConnectWalletModal(true);\n    },\n    showSwichChainModal: () => {\n      // setUnsupportedChainModal(false);\n    },\n    changeChain,\n    event,\n    ens: {\n      name: ensName,\n      avatar: ensAvatar\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s2(Web3WalletProvider, \"E4fJdhz6ZnTLebMS69XkPqvDWsQ=\", false, function () {\n  return [useChain, useWeb3React, useSessionStorage];\n});\n_c = Web3WalletProvider;\nconst WalletProvider = props => {\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n    getLibrary: library => library,\n    children: /*#__PURE__*/_jsxDEV(Web3WalletProvider, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_c2 = WalletProvider;\nexport default WalletProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Web3WalletProvider\");\n$RefreshReg$(_c2, \"WalletProvider\");","map":{"version":3,"names":["UnsupportedChainIdError","useWeb3React","Web3ReactProvider","NoEthereumProviderError","UserRejectedRequestError","BigNumber","ethers","createContext","useCallback","useContext","useEffect","useMemo","useRef","useState","useSessionStorage","Web3","EventEmitter","useChain","MetamaskWalletConfig","jsxDEV","_jsxDEV","Context","useWallet","_s","WalletConnectors","Web3WalletProvider","props","_s2","_web3React$account","children","activeChain","web3React","sessionProvider","setSessionProvider","removeSessionProvider","event","connecting","setConnecting","initialized","setInitialized","connectingRef","current","activeMeta","setActiveMeta","ethBalance","setEthBalance","ensName","setENSName","ensAvatar","setENSAvatar","preConnectedAccount","account","emit","disconnect","_activeMeta$onDisconn","deactivate","onDisconnect","call","connector","undefined","connect","walletConfig","factory","onError","error","_walletConfig$onError","err","console","log","message","onSuccess","_walletConfig$onConne","onConnect","id","activate","then","catch","activeNetwork","changeChain","setError","window","ethereum","Error","meta","chainId","request","method","params","Number","toString","utils","isAddress","ethWeb3","library","eth","getBalance","value","provider","providers","JsonRpcProvider","rpc","httpsUrl","lookupAddress","getAvatar","walletConnector","find","conn","isActive","active","showWalletsModal","showSwichChainModal","ens","name","avatar","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","WalletProvider","getLibrary","_c2","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/wallet/WalletProvider.jsx"],"sourcesContent":["import { UnsupportedChainIdError, useWeb3React, Web3ReactProvider } from \"@web3-react/core\";\nimport { NoEthereumProviderError, UserRejectedRequestError } from \"@web3-react/injected-connector\";\nimport BigNumber from \"bignumber.js\";\nimport { ethers } from \"ethers\";\nimport { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useSessionStorage } from \"react-use-storage\";\nimport Web3 from \"web3\";\nimport EventEmitter from \"wolfy87-eventemitter\";\nimport { useChain } from \"../chain/ChainProvider\";\n// import Modal from \"../components/modal/Modal\";\n// import InstallMetamaskModal from \"./components/install-metamask-modal/InstallMetamaskModal\";\n// import SelectWalletModal from \"./components/select-wallet-modal/SelectWalletModal\";\n// import SwitchChainModal from \"./components/switch-chain-modal/SwitchChainModal\";\nimport MetamaskWalletConfig from \"./connectors/metamask/MetamaskConnector\";\n\n/* \n  Create wallet hook: useWallet() \n*/\n\nconst Context = createContext();\n\nexport function useWallet() {\n  return useContext(Context);\n}\n\n/* \n  Add other wallet connector \n*/\n\nexport const WalletConnectors = [\n  MetamaskWalletConfig,\n];\n\nconst Web3WalletProvider = props => {\n\n  const { children } = props;\n  const { activeChain } = useChain();\n  const web3React = useWeb3React();\n\n  const [sessionProvider, setSessionProvider, removeSessionProvider] = useSessionStorage('wallet_provider');\n  const event = useMemo(() => new EventEmitter(), [])\n  const [connecting, setConnecting] = useState();\n  const [initialized, setInitialized] = useState(false);\n  const connectingRef = useRef(connecting);\n\n  /* \n    TODO: Test: Is it possible to remove this line \n  */\n\n  connectingRef.current = connecting;\n  const [activeMeta, setActiveMeta] = useState();\n\n  /* \n    Account states \n  */\n\n  const [ethBalance, setEthBalance] = useState();\n  const [ensName, setENSName] = useState();\n  const [ensAvatar, setENSAvatar]= useState();\n\n  /* \n    Modal controllers \n  */\n\n  // const [connectWalletModal, setConnectWalletModal] = useState(false);\n  // const [installMetaMaskModal, setInstallMetaMaskModal] = useState(false);\n  // const [unsupportedChainModal, setUnsupportedChainModal] = useState(false);\n  // const [userRejectedModal, setUserRejectedModal] = useState(false);\n\n  /* \n    \n  */\n\n  const preConnectedAccount = useRef(web3React.account)\n  if (preConnectedAccount.current !== web3React.account) {\n    preConnectedAccount.current = web3React.account\n    event.emit('UPDATE_ACCOUNT', web3React.account)\n  }\n\n  /* \n    Disconnect wallet handler \n  */\n\n  const disconnect = useCallback(() => {\n    web3React.deactivate()\n    activeMeta?.onDisconnect?.(web3React.connector)\n    setConnecting(undefined)\n    setActiveMeta(undefined)\n    setEthBalance(undefined)\n    removeSessionProvider()\n  }, [web3React, activeMeta, removeSessionProvider, setConnecting, setActiveMeta, setEthBalance])\n\n  /* \n    Connect wallet handler \n  */\n\n  const connect = useCallback(\n    async (walletConfig) => {\n\n      /* The status of connecting */\n\n      if(connectingRef.current) {\n        return\n      }\n\n      connectingRef.current = walletConfig\n      setConnecting(walletConfig);\n\n      // setConnectWalletModal(false);\n      // setInstallMetaMaskModal(false);\n      // setUnsupportedChainModal(false);\n      // setUserRejectedModal(false);\n\n      const connector = walletConfig.factory(activeChain);\n\n      /* Errors handlers: \n      /* No wallet available, \n      /* unsupported chain, \n      /* user rejected connection request, \n      /* and other errors. */\n      \n      function onError(error) {\n        if(error instanceof NoEthereumProviderError) {\n          // setInstallMetaMaskModal(true)\n          disconnect()\n        } else if(error instanceof UnsupportedChainIdError) {\n          // setUnsupportedChainModal(true)\n          disconnect()\n        } else if(error instanceof UserRejectedRequestError) {\n          // setUserRejectedModal(true)\n          disconnect()\n        } else {\n          const err = walletConfig.onError?.(error)\n          \n          if(err) {\n            console.log(err.message);\n          }\n          disconnect()\n        }\n      }\n\n      function onSuccess() {\n        if (!connectingRef.current) {\n          return\n        }\n\n        walletConfig.onConnect?.(connector)\n        setActiveMeta(walletConfig)\n        setSessionProvider(walletConfig.id)\n      }\n\n      await web3React.activate(connector, undefined, true).then(onSuccess).catch(onError)\n      setConnecting(undefined)\n\n      // try {\n        \n      //   const currentProviderChainId = await connector.getChainId()\n        \n      //   if(currentProviderChainId === activeNetwork.metamaskChain.chainId) {\n      //     await web3React.activate(connector, undefined, true)\n      //       .then(onSuccess)\n      //       .catch(onError)\n      //   } else {\n      //     setUnsupportedChainModal(true);\n      //   }\n        \n      //   setConnecting(undefined);\n\n      // } catch(error) {\n      //   if(error instanceof NoEthereumProviderError) {\n      //     setInstallMetaMaskModal(true)\n      //     disconnect()\n      //   }\n      // }       \n    },\n    [web3React, connectingRef, setConnecting, setSessionProvider, activeNetwork, disconnect],\n  )\n\n  const changeChain = async (setError) => {\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n\n      if (activeChain.meta.chainId === 1 || activeNetwork.meta.chainId === 5) {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [\n            {\n              \"chainId\": `0x${Number(activeNetwork.meta.chainId).toString(16)}`,\n            }\n          ]\n        });\n      } else {\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",          \n          params: [\n            {\n              \"chainId\": `0x${Number(activeNetwork.meta.chainId).toString(16)}`,\n            }\n          ]\n        });\n      }\n      \n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  /* \n    Use effect to update the account states \n  */\n\n  useEffect(() => {\n\n    /* Reset account states to undefined */\n\n    setEthBalance(undefined);\n    setENSName(undefined);\n    setENSAvatar(undefined);\n\n    const account = web3React.account;\n\n    if(account && Web3.utils.isAddress(account)) {\n      const ethWeb3 = new Web3(web3React.library);\n\n      /* Balance of the account */\n\n      ethWeb3.eth\n        .getBalance(account)\n        .then(value => {\n          setEthBalance(value ? new BigNumber(value) : undefined);\n        })\n        .catch(Error);\n      \n      /* ENS name and avatar of the account */\n\n      const provider = new ethers.providers.JsonRpcProvider(activeNetwork.rpc.httpsUrl);\n      provider\n        .lookupAddress(account)\n        .then(value => {\n          setENSName(value ?? undefined);\n          if(value) {\n            provider\n              .getAvatar(value ?? '')\n              .then(value => {\n                setENSAvatar(value ?? undefined);\n              })\n              .catch(Error);\n          }\n        })\n        .catch(Error)\n    }\n  }, [web3React.account, activeChain, web3React.library])\n\n  /* \n    Accroding to session to restore states of the account \n  */\n  \n  useEffect(() => {\n    (async () => {\n      if(sessionProvider) {\n        const walletConnector = WalletConnectors.find(conn => conn.id === sessionProvider);\n\n        if(walletConnector) {\n          await connect(walletConnector)\n        }\n      }\n      setInitialized(true);\n    })()\n  },[])\n\n  const value = {\n    initialized,\n    connecting,\n    isActive: web3React.active,\n    account: web3React.account ?? undefined,\n    meta: activeMeta,\n    connector: web3React.connector,\n    provider: web3React.library,\n    ethBalance,\n    connect,\n    disconnect,\n    showWalletsModal: () => {\n      // setConnectWalletModal(true);\n    },\n    showSwichChainModal: () => {\n      // setUnsupportedChainModal(false);\n    },\n    changeChain,\n    event,\n    ens: {\n      name: ensName,\n      avatar: ensAvatar,\n    }\n  }\n\n  return (\n    <Context.Provider value={value}>\n      { children }\n      {/* { connectWalletModal && <SelectWalletModal /> }\n      { userRejectedModal && <Modal />}\n      { unsupportedChainModal && <SwitchChainModal />}\n      { installMetaMaskModal && <InstallMetamaskModal />} */}\n    </Context.Provider>\n  )\n}\n\nconst WalletProvider = props => {\n\n  const { children } = props\n\n  return (\n    <Web3ReactProvider getLibrary={library => library}>\n      <Web3WalletProvider>\n        { children }\n      </Web3WalletProvider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default WalletProvider\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
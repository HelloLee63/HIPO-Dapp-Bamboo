{"ast":null,"code":"import { useState, useRef, useMemo, useEffect, useCallback } from 'react';\nfunction getValueFromSessionStorage(key) {\n  var _a;\n  if (typeof sessionStorage === \"undefined\") {\n    return null;\n  }\n  const storedValue = (_a = sessionStorage.getItem(key)) !== null && _a !== void 0 ? _a : \"null\";\n  try {\n    return JSON.parse(storedValue);\n  } catch (error) {\n    console.error(error);\n  }\n  return storedValue;\n}\nfunction saveValueToSessionStorage(key, value) {\n  if (typeof sessionStorage === \"undefined\") {\n    return null;\n  }\n  return sessionStorage.setItem(key, JSON.stringify(value));\n}\n/**\r\n * @param key Key of the sessionStorage object\r\n * @param initialState Default initial value\r\n */\nfunction initialize(key, initialState) {\n  const valueLoadedFromSessionStorage = getValueFromSessionStorage(key);\n  if (valueLoadedFromSessionStorage === null) {\n    return initialState;\n  } else {\n    return valueLoadedFromSessionStorage;\n  }\n}\n/**\r\n * useSessionstorageState hook\r\n * Tracks a value within sessionStorage and updates it\r\n *\r\n * @param {string} key - Key of the sessionStorage object\r\n * @param {any} initialState - Default initial value\r\n * @returns {[any, Dispatch<SetStateAction<any>>, () => void]}\r\n * @see https://rooks.vercel.app/docs/useSessionstorageState\r\n */\nfunction useSessionstorageState(key, initialState) {\n  const [value, setValue] = useState(() => initialize(key, initialState));\n  const isUpdateFromCrossDocumentListener = useRef(false);\n  const isUpdateFromWithinDocumentListener = useRef(false);\n  const customEventTypeName = useMemo(() => {\n    return `rooks-${key}-sessionstorage-update`;\n  }, [key]);\n  useEffect(() => {\n    /**\r\n     * We need to ensure there is no loop of\r\n     * storage events fired. Hence we are using a ref\r\n     * to keep track of whether setValue is from another\r\n     * storage event\r\n     */\n    if (!isUpdateFromCrossDocumentListener.current) {\n      saveValueToSessionStorage(key, value);\n    }\n  }, [key, value]);\n  const listenToCrossDocumentStorageEvents = useCallback(event => {\n    var _a;\n    if (event.storageArea === sessionStorage && event.key === key) {\n      try {\n        isUpdateFromCrossDocumentListener.current = true;\n        const newValue = JSON.parse((_a = event.newValue) !== null && _a !== void 0 ? _a : \"null\");\n        if (value !== newValue) {\n          setValue(newValue);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [key, value]);\n  // check for changes across windows\n  useEffect(() => {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n      return () => {\n        window.removeEventListener(\"storage\", listenToCrossDocumentStorageEvents);\n      };\n    } else {\n      console.warn(\"[useSessionstorageState] window is undefined.\");\n      return () => {};\n    }\n  }, [listenToCrossDocumentStorageEvents]);\n  const listenToCustomEventWithinDocument = useCallback(event => {\n    try {\n      isUpdateFromWithinDocumentListener.current = true;\n      const {\n        newValue\n      } = event.detail;\n      if (value !== newValue) {\n        setValue(newValue);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [value]);\n  // check for changes within document\n  useEffect(() => {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n      return () => {\n        document.removeEventListener(customEventTypeName, listenToCustomEventWithinDocument);\n      };\n    } else {\n      console.warn(\"[useSessionstorageState] document is undefined.\");\n      return () => {};\n    }\n  }, [customEventTypeName, listenToCustomEventWithinDocument]);\n  const broadcastValueWithinDocument = useCallback(newValue => {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof document !== \"undefined\") {\n      const event = new CustomEvent(customEventTypeName, {\n        detail: {\n          newValue\n        }\n      });\n      document.dispatchEvent(event);\n    } else {\n      console.warn(\"[useSessionstorageState] document is undefined.\");\n    }\n  }, [customEventTypeName]);\n  const set = useCallback(newValue => {\n    isUpdateFromCrossDocumentListener.current = false;\n    isUpdateFromWithinDocumentListener.current = false;\n    setValue(newValue);\n    broadcastValueWithinDocument(newValue);\n  }, [broadcastValueWithinDocument]);\n  const remove = useCallback(() => {\n    sessionStorage.removeItem(key);\n  }, [key]);\n  return [value, set, remove];\n}\nexport { useSessionstorageState };","map":{"version":3,"names":["useState","useRef","useMemo","useEffect","useCallback","getValueFromSessionStorage","key","_a","sessionStorage","storedValue","getItem","JSON","parse","error","console","saveValueToSessionStorage","value","setItem","stringify","initialize","initialState","valueLoadedFromSessionStorage","useSessionstorageState","setValue","isUpdateFromCrossDocumentListener","isUpdateFromWithinDocumentListener","customEventTypeName","current","listenToCrossDocumentStorageEvents","event","storageArea","newValue","log","window","addEventListener","removeEventListener","warn","listenToCustomEventWithinDocument","detail","document","broadcastValueWithinDocument","CustomEvent","dispatchEvent","set","remove","removeItem"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useSessionstorageState.js"],"sourcesContent":["import { useState, useRef, useMemo, useEffect, useCallback } from 'react';\n\nfunction getValueFromSessionStorage(key) {\r\n    var _a;\r\n    if (typeof sessionStorage === \"undefined\") {\r\n        return null;\r\n    }\r\n    const storedValue = (_a = sessionStorage.getItem(key)) !== null && _a !== void 0 ? _a : \"null\";\r\n    try {\r\n        return JSON.parse(storedValue);\r\n    }\r\n    catch (error) {\r\n        console.error(error);\r\n    }\r\n    return storedValue;\r\n}\r\nfunction saveValueToSessionStorage(key, value) {\r\n    if (typeof sessionStorage === \"undefined\") {\r\n        return null;\r\n    }\r\n    return sessionStorage.setItem(key, JSON.stringify(value));\r\n}\r\n/**\r\n * @param key Key of the sessionStorage object\r\n * @param initialState Default initial value\r\n */\r\nfunction initialize(key, initialState) {\r\n    const valueLoadedFromSessionStorage = getValueFromSessionStorage(key);\r\n    if (valueLoadedFromSessionStorage === null) {\r\n        return initialState;\r\n    }\r\n    else {\r\n        return valueLoadedFromSessionStorage;\r\n    }\r\n}\r\n/**\r\n * useSessionstorageState hook\r\n * Tracks a value within sessionStorage and updates it\r\n *\r\n * @param {string} key - Key of the sessionStorage object\r\n * @param {any} initialState - Default initial value\r\n * @returns {[any, Dispatch<SetStateAction<any>>, () => void]}\r\n * @see https://rooks.vercel.app/docs/useSessionstorageState\r\n */\r\nfunction useSessionstorageState(key, initialState) {\r\n    const [value, setValue] = useState(() => initialize(key, initialState));\r\n    const isUpdateFromCrossDocumentListener = useRef(false);\r\n    const isUpdateFromWithinDocumentListener = useRef(false);\r\n    const customEventTypeName = useMemo(() => {\r\n        return `rooks-${key}-sessionstorage-update`;\r\n    }, [key]);\r\n    useEffect(() => {\r\n        /**\r\n         * We need to ensure there is no loop of\r\n         * storage events fired. Hence we are using a ref\r\n         * to keep track of whether setValue is from another\r\n         * storage event\r\n         */\r\n        if (!isUpdateFromCrossDocumentListener.current) {\r\n            saveValueToSessionStorage(key, value);\r\n        }\r\n    }, [key, value]);\r\n    const listenToCrossDocumentStorageEvents = useCallback((event) => {\r\n        var _a;\r\n        if (event.storageArea === sessionStorage && event.key === key) {\r\n            try {\r\n                isUpdateFromCrossDocumentListener.current = true;\r\n                const newValue = JSON.parse((_a = event.newValue) !== null && _a !== void 0 ? _a : \"null\");\r\n                if (value !== newValue) {\r\n                    setValue(newValue);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }, [key, value]);\r\n    // check for changes across windows\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"storage\", listenToCrossDocumentStorageEvents);\r\n            return () => {\r\n                window.removeEventListener(\"storage\", listenToCrossDocumentStorageEvents);\r\n            };\r\n        }\r\n        else {\r\n            console.warn(\"[useSessionstorageState] window is undefined.\");\r\n            return () => { };\r\n        }\r\n    }, [listenToCrossDocumentStorageEvents]);\r\n    const listenToCustomEventWithinDocument = useCallback((event) => {\r\n        try {\r\n            isUpdateFromWithinDocumentListener.current = true;\r\n            const { newValue } = event.detail;\r\n            if (value !== newValue) {\r\n                setValue(newValue);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [value]);\r\n    // check for changes within document\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (typeof document !== \"undefined\") {\r\n            document.addEventListener(customEventTypeName, listenToCustomEventWithinDocument);\r\n            return () => {\r\n                document.removeEventListener(customEventTypeName, listenToCustomEventWithinDocument);\r\n            };\r\n        }\r\n        else {\r\n            console.warn(\"[useSessionstorageState] document is undefined.\");\r\n            return () => { };\r\n        }\r\n    }, [customEventTypeName, listenToCustomEventWithinDocument]);\r\n    const broadcastValueWithinDocument = useCallback((newValue) => {\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (typeof document !== \"undefined\") {\r\n            const event = new CustomEvent(customEventTypeName, { detail: { newValue } });\r\n            document.dispatchEvent(event);\r\n        }\r\n        else {\r\n            console.warn(\"[useSessionstorageState] document is undefined.\");\r\n        }\r\n    }, [customEventTypeName]);\r\n    const set = useCallback((newValue) => {\r\n        isUpdateFromCrossDocumentListener.current = false;\r\n        isUpdateFromWithinDocumentListener.current = false;\r\n        setValue(newValue);\r\n        broadcastValueWithinDocument(newValue);\r\n    }, [broadcastValueWithinDocument]);\r\n    const remove = useCallback(() => {\r\n        sessionStorage.removeItem(key);\r\n    }, [key]);\r\n    return [value, set, remove];\r\n}\n\nexport { useSessionstorageState };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEzE,SAASC,0BAA0BA,CAACC,GAAG,EAAE;EACrC,IAAIC,EAAE;EACN,IAAI,OAAOC,cAAc,KAAK,WAAW,EAAE;IACvC,OAAO,IAAI;EACf;EACA,MAAMC,WAAW,GAAG,CAACF,EAAE,GAAGC,cAAc,CAACE,OAAO,CAACJ,GAAG,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,MAAM;EAC9F,IAAI;IACA,OAAOI,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC;EAClC,CAAC,CACD,OAAOI,KAAK,EAAE;IACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;EACA,OAAOJ,WAAW;AACtB;AACA,SAASM,yBAAyBA,CAACT,GAAG,EAAEU,KAAK,EAAE;EAC3C,IAAI,OAAOR,cAAc,KAAK,WAAW,EAAE;IACvC,OAAO,IAAI;EACf;EACA,OAAOA,cAAc,CAACS,OAAO,CAACX,GAAG,EAAEK,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,SAASG,UAAUA,CAACb,GAAG,EAAEc,YAAY,EAAE;EACnC,MAAMC,6BAA6B,GAAGhB,0BAA0B,CAACC,GAAG,CAAC;EACrE,IAAIe,6BAA6B,KAAK,IAAI,EAAE;IACxC,OAAOD,YAAY;EACvB,CAAC,MACI;IACD,OAAOC,6BAA6B;EACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAAChB,GAAG,EAAEc,YAAY,EAAE;EAC/C,MAAM,CAACJ,KAAK,EAAEO,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,MAAMmB,UAAU,CAACb,GAAG,EAAEc,YAAY,CAAC,CAAC;EACvE,MAAMI,iCAAiC,GAAGvB,MAAM,CAAC,KAAK,CAAC;EACvD,MAAMwB,kCAAkC,GAAGxB,MAAM,CAAC,KAAK,CAAC;EACxD,MAAMyB,mBAAmB,GAAGxB,OAAO,CAAC,MAAM;IACtC,OAAQ,SAAQI,GAAI,wBAAuB;EAC/C,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EACTH,SAAS,CAAC,MAAM;IACZ;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACqB,iCAAiC,CAACG,OAAO,EAAE;MAC5CZ,yBAAyB,CAACT,GAAG,EAAEU,KAAK,CAAC;IACzC;EACJ,CAAC,EAAE,CAACV,GAAG,EAAEU,KAAK,CAAC,CAAC;EAChB,MAAMY,kCAAkC,GAAGxB,WAAW,CAAEyB,KAAK,IAAK;IAC9D,IAAItB,EAAE;IACN,IAAIsB,KAAK,CAACC,WAAW,KAAKtB,cAAc,IAAIqB,KAAK,CAACvB,GAAG,KAAKA,GAAG,EAAE;MAC3D,IAAI;QACAkB,iCAAiC,CAACG,OAAO,GAAG,IAAI;QAChD,MAAMI,QAAQ,GAAGpB,IAAI,CAACC,KAAK,CAAC,CAACL,EAAE,GAAGsB,KAAK,CAACE,QAAQ,MAAM,IAAI,IAAIxB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,MAAM,CAAC;QAC1F,IAAIS,KAAK,KAAKe,QAAQ,EAAE;UACpBR,QAAQ,CAACQ,QAAQ,CAAC;QACtB;MACJ,CAAC,CACD,OAAOlB,KAAK,EAAE;QACVC,OAAO,CAACkB,GAAG,CAACnB,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC,EAAE,CAACP,GAAG,EAAEU,KAAK,CAAC,CAAC;EAChB;EACAb,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,OAAO8B,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,kCAAkC,CAAC;MACtE,OAAO,MAAM;QACTK,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,kCAAkC,CAAC;MAC7E,CAAC;IACL,CAAC,MACI;MACDd,OAAO,CAACsB,IAAI,CAAC,+CAA+C,CAAC;MAC7D,OAAO,MAAM,CAAE,CAAC;IACpB;EACJ,CAAC,EAAE,CAACR,kCAAkC,CAAC,CAAC;EACxC,MAAMS,iCAAiC,GAAGjC,WAAW,CAAEyB,KAAK,IAAK;IAC7D,IAAI;MACAJ,kCAAkC,CAACE,OAAO,GAAG,IAAI;MACjD,MAAM;QAAEI;MAAS,CAAC,GAAGF,KAAK,CAACS,MAAM;MACjC,IAAItB,KAAK,KAAKe,QAAQ,EAAE;QACpBR,QAAQ,CAACQ,QAAQ,CAAC;MACtB;IACJ,CAAC,CACD,OAAOlB,KAAK,EAAE;MACVC,OAAO,CAACkB,GAAG,CAACnB,KAAK,CAAC;IACtB;EACJ,CAAC,EAAE,CAACG,KAAK,CAAC,CAAC;EACX;EACAb,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,OAAOoC,QAAQ,KAAK,WAAW,EAAE;MACjCA,QAAQ,CAACL,gBAAgB,CAACR,mBAAmB,EAAEW,iCAAiC,CAAC;MACjF,OAAO,MAAM;QACTE,QAAQ,CAACJ,mBAAmB,CAACT,mBAAmB,EAAEW,iCAAiC,CAAC;MACxF,CAAC;IACL,CAAC,MACI;MACDvB,OAAO,CAACsB,IAAI,CAAC,iDAAiD,CAAC;MAC/D,OAAO,MAAM,CAAE,CAAC;IACpB;EACJ,CAAC,EAAE,CAACV,mBAAmB,EAAEW,iCAAiC,CAAC,CAAC;EAC5D,MAAMG,4BAA4B,GAAGpC,WAAW,CAAE2B,QAAQ,IAAK;IAC3D;IACA,IAAI,OAAOQ,QAAQ,KAAK,WAAW,EAAE;MACjC,MAAMV,KAAK,GAAG,IAAIY,WAAW,CAACf,mBAAmB,EAAE;QAAEY,MAAM,EAAE;UAAEP;QAAS;MAAE,CAAC,CAAC;MAC5EQ,QAAQ,CAACG,aAAa,CAACb,KAAK,CAAC;IACjC,CAAC,MACI;MACDf,OAAO,CAACsB,IAAI,CAAC,iDAAiD,CAAC;IACnE;EACJ,CAAC,EAAE,CAACV,mBAAmB,CAAC,CAAC;EACzB,MAAMiB,GAAG,GAAGvC,WAAW,CAAE2B,QAAQ,IAAK;IAClCP,iCAAiC,CAACG,OAAO,GAAG,KAAK;IACjDF,kCAAkC,CAACE,OAAO,GAAG,KAAK;IAClDJ,QAAQ,CAACQ,QAAQ,CAAC;IAClBS,4BAA4B,CAACT,QAAQ,CAAC;EAC1C,CAAC,EAAE,CAACS,4BAA4B,CAAC,CAAC;EAClC,MAAMI,MAAM,GAAGxC,WAAW,CAAC,MAAM;IAC7BI,cAAc,CAACqC,UAAU,CAACvC,GAAG,CAAC;EAClC,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EACT,OAAO,CAACU,KAAK,EAAE2B,GAAG,EAAEC,MAAM,CAAC;AAC/B;AAEA,SAAStB,sBAAsB"},"metadata":{},"sourceType":"module"}
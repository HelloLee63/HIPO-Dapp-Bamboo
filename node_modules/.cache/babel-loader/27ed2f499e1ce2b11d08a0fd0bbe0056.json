{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/Web3Provider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, useContext, useEffect, useState, useMemo, useCallback } from \"react\";\nimport Web3 from \"web3\";\nimport EventEmitter from \"wolfy87-eventemitter\";\nimport { useChain } from \"../chain/ChainProvider\";\nimport { Goerli } from \"../chain/chains/testnet/Goerli\";\nimport { useGeneral } from \"../layout/components/general-provider/GeneralProvider\";\nimport { MetamaskConnector } from \"../wallet/connectors/metamask/MetamaskConnector\";\n// import SelectNetworkModal from \"../network/components/select-network-modal/SelectNetworkModal\";\nimport { useWallet } from \"../wallet/WalletProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoerliHttpsWeb3Provider = new Web3.providers.HttpProvider(Goerli.rpc.httpsUrl);\nconst CacheHttpsWeb3Provider = {\n  [Goerli.rpc.httpsUrl]: GoerliHttpsWeb3Provider\n};\nexport const WEB3_ERROR_VALUE = 3.9638773911973445e75;\nconst Context = /*#__PURE__*/createContext();\nexport function useWeb3() {\n  _s();\n  return useContext(Context);\n}\n_s(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst Web3Provider = props => {\n  _s2();\n  const {\n    children\n  } = props;\n  const {\n    windowState\n  } = useGeneral();\n  const {\n    activeChain,\n    changeChain,\n    findChain,\n    findChainByChainId,\n    defaultChain\n  } = useChain();\n  const wallet = useWallet();\n  const event = useMemo(() => new EventEmitter(), []);\n  const [blockNumer, setBlockNumber] = useState();\n  const [networkSelectVisible, showNetworkSelect] = useState(false);\n  const httpsWeb3 = useMemo(() => {\n    let provider = CacheHttpsWeb3Provider[activeChain.rpc.httpsUrl];\n    if (!provider) {\n      provider = new Web3.providers.HttpProvider(activeChain.rpc.httpsUrl);\n      CacheHttpsWeb3Provider[activeChain.rpc.httpsUrl] = provider;\n    }\n    return new Web3(provider);\n  }, [activeChain]);\n  const wssWeb3 = useMemo(() => {\n    if (activeChain.rpc.wssUrl) {\n      return undefined;\n    }\n    const provider = new Web3.providers.WebsocketProvider(activeChain.rpc.wssUrl);\n    return new Web3(provider);\n  }, [activeChain]);\n  function tryCall(to, from, data, value) {\n    return httpsWeb3.eth.call({\n      to,\n      from,\n      data,\n      value\n    });\n  }\n  const getContractAbi = useCallback(async address => {\n    const {\n      apiUrl,\n      key\n    } = activeChain.explorer;\n    const url = `${apiUrl}/api?module=contract&action=getabi&address=${address}&apikey=${key}`;\n    const result = await fetch(url);\n    const {\n      status,\n      result: result_2\n    } = await result.json();\n    if (status === '1') {\n      return JSON.parse(result_2);\n    }\n    return Promise.reject(result_2);\n  }, [activeChain.explorer]);\n  useEffect(() => {\n    if (wallet.connector instanceof MetamaskConnector) {\n      wallet.connector.getProvider().then(provider => {\n        provider.on('chainChanged', chainId => {\n          var _findChainByChainId;\n          const network = (_findChainByChainId = findChainByChainId(Number(chainId))) !== null && _findChainByChainId !== void 0 ? _findChainByChainId : defaultChain;\n          changeChain(network.id);\n        });\n      });\n    }\n  }, [wallet.connector]);\n  const switchNetwork = useCallback(async networkId => {\n    const network = findChain(networkId);\n    if (!network) {\n      return;\n    }\n    let canSetNetwork = true;\n    if (wallet.connector instanceof MetamaskConnector && network.metamaskChain) {\n      try {\n        const error = await wallet.connector.switchChain({\n          chainId: network.metamaskChain.chainId\n        });\n        if (error) {\n          await Promise.reject(error);\n        }\n      } catch (e) {\n        var _e$message;\n        canSetNetwork = false;\n        if (e.code === 4902 || (_e$message = e.message) !== null && _e$message !== void 0 && _e$message.includes('Unrecognized chain ID')) {\n          await wallet.connector.addChain(network.metamaskChain);\n        }\n      }\n    }\n    if (canSetNetwork) {\n      changeChain(network.id);\n    }\n  }, [wallet.connector]);\n  useEffect(() => {\n    if (!windowState.isVisible || !wssWeb3) {\n      return undefined;\n    }\n    wssWeb3.eth.getBlockNumber().then(value => {\n      if (value) {\n        setBlockNumber(value);\n      }\n    }).catch(Error);\n    const subscription = wssWeb3.eth.subscribe('newBlockHeaders');\n    subscription.on('data', blockHeader => {\n      if (blockHeader && blockHeader.number) {\n        setBlockNumber(blockHeader.number);\n      }\n    }).on('error', () => {\n      setTimeout(() => {\n        subscription.subscribe();\n      }, 1000);\n    });\n    return () => {\n      var _subscription$unsubsc;\n      (_subscription$unsubsc = subscription.unsubscribe) === null || _subscription$unsubsc === void 0 ? void 0 : _subscription$unsubsc.call(subscription);\n    };\n  }, [windowState.isVisible]);\n\n  // function getEtherscanTxUrl(txHash) {\n  //   // return txHash ? `${activeChain.explorer.url}/tx/${txHash}` : undefined\n  //   return txHash ? `${activeChain.explorer?.url}/tx/${txHash}` : undefined\n  // }\n\n  // function getEtherscanAddressUrl(address) {\n  //   // return address ? `${activeChain.explorer.url}/address/${address}` : undefined\n  //   return address ? `${activeChain.explorer?.url}/address/${address}` : undefined\n  // }\n\n  const value = {\n    event,\n    blockNumer,\n    activeProvider: httpsWeb3,\n    switchNetwork,\n    showNetworkSelect: () => {\n      showNetworkSelect(true);\n    },\n    tryCall,\n    getContractAbi\n    // getEtherscanTxUrl,\n    // getEtherscanAddressUrl,\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 7\n  }, this);\n};\n_s2(Web3Provider, \"WnYkndruOmTNmHvBgnCAIJfJDVY=\", false, function () {\n  return [useGeneral, useChain, useWallet];\n});\n_c = Web3Provider;\nexport default Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useMemo","useCallback","Web3","EventEmitter","useChain","Goerli","useGeneral","MetamaskConnector","useWallet","jsxDEV","_jsxDEV","GoerliHttpsWeb3Provider","providers","HttpProvider","rpc","httpsUrl","CacheHttpsWeb3Provider","WEB3_ERROR_VALUE","Context","useWeb3","_s","Web3Provider","props","_s2","children","windowState","activeChain","changeChain","findChain","findChainByChainId","defaultChain","wallet","event","blockNumer","setBlockNumber","networkSelectVisible","showNetworkSelect","httpsWeb3","provider","wssWeb3","wssUrl","undefined","WebsocketProvider","tryCall","to","from","data","value","eth","call","getContractAbi","address","apiUrl","key","explorer","url","result","fetch","status","result_2","json","JSON","parse","Promise","reject","connector","getProvider","then","on","chainId","_findChainByChainId","network","Number","id","switchNetwork","networkId","canSetNetwork","metamaskChain","error","switchChain","e","_e$message","code","message","includes","addChain","isVisible","getBlockNumber","catch","Error","subscription","subscribe","blockHeader","number","setTimeout","_subscription$unsubsc","unsubscribe","activeProvider","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/Web3Provider.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, useContext, useEffect, useState, useMemo, useCallback } from \"react\";\nimport Web3 from \"web3\";\nimport EventEmitter from \"wolfy87-eventemitter\";\nimport { useChain } from \"../chain/ChainProvider\";\nimport { Goerli } from \"../chain/chains/testnet/Goerli\";\nimport { useGeneral } from \"../layout/components/general-provider/GeneralProvider\";\nimport { MetamaskConnector } from \"../wallet/connectors/metamask/MetamaskConnector\";\n// import SelectNetworkModal from \"../network/components/select-network-modal/SelectNetworkModal\";\nimport { useWallet } from \"../wallet/WalletProvider\";\n\nexport const GoerliHttpsWeb3Provider = new Web3.providers.HttpProvider(Goerli.rpc.httpsUrl)\n\nconst CacheHttpsWeb3Provider = {\n    [Goerli.rpc.httpsUrl]: GoerliHttpsWeb3Provider,\n}\n\nexport const WEB3_ERROR_VALUE = 3.9638773911973445e75\n\nconst Context = createContext()\n\nexport function useWeb3() {\n    return useContext(Context)\n}\n\nconst Web3Provider = props => {\n\n    const { children } = props\n    const { windowState } = useGeneral()\n    const { activeChain, changeChain, findChain, findChainByChainId, defaultChain } = useChain()\n\n    const wallet = useWallet()\n\n    const event = useMemo(() => new EventEmitter(), [])\n\n    const [blockNumer, setBlockNumber] = useState()\n    const [networkSelectVisible, showNetworkSelect] = useState(false)\n    \n    const httpsWeb3 = useMemo(() => {\n      let provider = CacheHttpsWeb3Provider[activeChain.rpc.httpsUrl]\n      if (!provider) {\n          provider = new Web3.providers.HttpProvider(activeChain.rpc.httpsUrl)\n          CacheHttpsWeb3Provider[activeChain.rpc.httpsUrl] = provider\n      }\n\n      return new Web3(provider)\n    }, [activeChain])\n\n    const wssWeb3 = useMemo(() => {\n      if (activeChain.rpc.wssUrl) {\n        return undefined\n      }\n\n      const provider = new Web3.providers.WebsocketProvider(activeChain.rpc.wssUrl)\n      return new Web3(provider)\n    }, [activeChain])\n\n    function tryCall (to, from, data, value) {\n      return httpsWeb3.eth.call({\n        to,\n        from,\n        data,\n        value,\n      })\n    }\n\n    const getContractAbi = useCallback(\n      async (address) => {\n        const { apiUrl, key } = activeChain.explorer\n        const url = `${apiUrl}/api?module=contract&action=getabi&address=${address}&apikey=${key}`\n        const result = await fetch(url);\n        const { status, result: result_2 } = await result.json();\n        if (status === '1') {\n          return JSON.parse(result_2);\n        }\n        return Promise.reject(result_2);\n      },\n      [activeChain.explorer],\n      )\n\n    useEffect(() => {\n      if (wallet.connector instanceof MetamaskConnector) {\n        wallet.connector.getProvider().then(provider => {\n          provider.on('chainChanged', (chainId) => {\n            const network = findChainByChainId(Number(chainId)) ?? defaultChain\n            changeChain(network.id)\n          })\n        })\n      }\n    }, [wallet.connector])\n\n    const switchNetwork = useCallback(\n      async (networkId) => {\n        const network = findChain(networkId)\n\n        if (!network) {\n            return\n        }\n\n        let canSetNetwork = true\n\n        if (wallet.connector instanceof MetamaskConnector && network.metamaskChain) {\n          try {\n            const error = await wallet.connector.switchChain({\n              chainId: network.metamaskChain.chainId,\n            })\n\n            if(error) {\n              await Promise.reject(error)\n            }\n          } catch (e) {\n              canSetNetwork = false\n\n              if (e.code === 4902 || e.message?.includes('Unrecognized chain ID')) {\n                await wallet.connector.addChain(network.metamaskChain)\n              }                           \n          }\n        }\n\n        if (canSetNetwork) {\n            changeChain(network.id)\n        }\n      },\n      [wallet.connector],\n    )\n\n    useEffect(() => {\n      if (!windowState.isVisible || !wssWeb3) {\n          return undefined\n      }\n\n      wssWeb3.eth\n          .getBlockNumber()\n          .then(value => {\n              if (value) {\n                  setBlockNumber(value)\n              }\n          })\n          .catch(Error)\n      const subscription = wssWeb3.eth.subscribe('newBlockHeaders')\n\n      subscription\n        .on('data', blockHeader => {\n            if (blockHeader && blockHeader.number) {\n                setBlockNumber(blockHeader.number)\n            }\n        })\n        .on('error', () => {\n            setTimeout(() => {\n                subscription.subscribe()\n            }, 1_000)\n        })\n      \n      return () => {\n        subscription.unsubscribe?.()\n      }\n    }, [windowState.isVisible])\n\n    // function getEtherscanTxUrl(txHash) {\n    //   // return txHash ? `${activeChain.explorer.url}/tx/${txHash}` : undefined\n    //   return txHash ? `${activeChain.explorer?.url}/tx/${txHash}` : undefined\n    // }\n    \n    // function getEtherscanAddressUrl(address) {\n    //   // return address ? `${activeChain.explorer.url}/address/${address}` : undefined\n    //   return address ? `${activeChain.explorer?.url}/address/${address}` : undefined\n    // }\n\n    const value ={\n      event,\n      blockNumer,\n      activeProvider: httpsWeb3,\n      switchNetwork,\n      showNetworkSelect: () => {\n        showNetworkSelect(true)\n      },\n      tryCall,\n      getContractAbi,\n      // getEtherscanTxUrl,\n      // getEtherscanAddressUrl,\n    }\n\n    return (\n      <Context.Provider value={value}>\n        {children}\n        {/* {networkSelectVisible && <SelectNetworkModal onCancel={() => showNetworkSelect(false)} />} */}\n      </Context.Provider>\n    )    \n}\n\nexport default Web3Provider"],"mappings":"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"},"metadata":{},"sourceType":"module"}
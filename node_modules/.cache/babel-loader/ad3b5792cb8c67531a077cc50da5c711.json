{"ast":null,"code":"import { useFreshRef } from './useFreshRef.js';\n\n/**\r\n * useFreshTick\r\n * @param callback The callback to be called on mount\r\n * @returns A fresh callback.\r\n * @see https://rooks.vercel.app/docs/useFreshCallback\r\n */\nfunction useFreshTick(callback) {\n  const freshRef = useFreshRef(callback);\n  function tick() {\n    if (typeof freshRef.current === \"function\") {\n      freshRef.current(...arguments);\n    }\n  }\n  return tick;\n}\nexport { useFreshTick };","map":{"version":3,"names":["useFreshRef","useFreshTick","callback","freshRef","tick","current","arguments"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useFreshTick.js"],"sourcesContent":["import { useFreshRef } from './useFreshRef.js';\n\n/**\r\n * useFreshTick\r\n * @param callback The callback to be called on mount\r\n * @returns A fresh callback.\r\n * @see https://rooks.vercel.app/docs/useFreshCallback\r\n */\r\nfunction useFreshTick(callback) {\r\n    const freshRef = useFreshRef(callback);\r\n    function tick(...args) {\r\n        if (typeof freshRef.current === \"function\") {\r\n            freshRef.current(...args);\r\n        }\r\n    }\r\n    return tick;\r\n}\n\nexport { useFreshTick };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,QAAQ,EAAE;EAC5B,MAAMC,QAAQ,GAAGH,WAAW,CAACE,QAAQ,CAAC;EACtC,SAASE,IAAIA,CAAA,EAAU;IACnB,IAAI,OAAOD,QAAQ,CAACE,OAAO,KAAK,UAAU,EAAE;MACxCF,QAAQ,CAACE,OAAO,CAAC,GAAAC,SAAO,CAAC;IAC7B;EACJ;EACA,OAAOF,IAAI;AACf;AAEA,SAASH,YAAY"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport { noop } from '../utils/noop.js';\nconst config = {\n  root: null,\n  rootMargin: \"0px 0px 0px 0px\",\n  threshold: [0, 1]\n};\n/**\r\n *\r\n * useInViewRef hook\r\n *\r\n * Returns a mutation observer for a React Ref and true/false when element enters/leaves the viewport. Also fires a callback.\r\n *\r\n * @param {IntersectionObserverCallback} callback Function that needs to be fired on mutation\r\n * @param {IntersectionObserverInit} options\r\n * @see https://rooks.vercel.app/docs/useInViewRef\r\n */\nfunction useInViewRef() {\n  let callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config;\n  const {\n    root = null,\n    rootMargin,\n    threshold\n  } = options;\n  const [node, setNode] = useState(null);\n  const [inView, setInView] = useState(false);\n  useEffect(() => {\n    // Create an observer instance linked to the callback function\n    if (node) {\n      const observer = new IntersectionObserver((entries, observerRef) => {\n        for (const {\n          isIntersecting\n        } of entries) setInView(isIntersecting);\n        callback(entries, observerRef);\n      }, options);\n      // Start observing the target node for configured mutations\n      observer.observe(node);\n      return () => {\n        observer.disconnect();\n      };\n    }\n    return noop;\n  }, [node, callback, root, rootMargin, threshold, options]);\n  const ref = useCallback(nodeElement => {\n    setNode(nodeElement);\n  }, []);\n  return [ref, inView];\n}\nexport { useInViewRef };","map":{"version":3,"names":["useState","useEffect","useCallback","noop","config","root","rootMargin","threshold","useInViewRef","callback","arguments","length","undefined","options","node","setNode","inView","setInView","observer","IntersectionObserver","entries","observerRef","isIntersecting","observe","disconnect","ref","nodeElement"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useInViewRef.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { noop } from '../utils/noop.js';\n\nconst config = {\r\n    root: null,\r\n    rootMargin: \"0px 0px 0px 0px\",\r\n    threshold: [0, 1],\r\n};\r\n/**\r\n *\r\n * useInViewRef hook\r\n *\r\n * Returns a mutation observer for a React Ref and true/false when element enters/leaves the viewport. Also fires a callback.\r\n *\r\n * @param {IntersectionObserverCallback} callback Function that needs to be fired on mutation\r\n * @param {IntersectionObserverInit} options\r\n * @see https://rooks.vercel.app/docs/useInViewRef\r\n */\r\nfunction useInViewRef(callback = () => { }, options = config) {\r\n    const { root = null, rootMargin, threshold } = options;\r\n    const [node, setNode] = useState(null);\r\n    const [inView, setInView] = useState(false);\r\n    useEffect(() => {\r\n        // Create an observer instance linked to the callback function\r\n        if (node) {\r\n            const observer = new IntersectionObserver((entries, observerRef) => {\r\n                for (const { isIntersecting } of entries)\r\n                    setInView(isIntersecting);\r\n                callback(entries, observerRef);\r\n            }, options);\r\n            // Start observing the target node for configured mutations\r\n            observer.observe(node);\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        }\r\n        return noop;\r\n    }, [node, callback, root, rootMargin, threshold, options]);\r\n    const ref = useCallback((nodeElement) => {\r\n        setNode(nodeElement);\r\n    }, []);\r\n    return [ref, inView];\r\n}\n\nexport { useInViewRef };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,MAAM,GAAG;EACXC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE,iBAAiB;EAC7BC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;AACpB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAA,EAAyC;EAAA,IAAxCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM,CAAE,CAAC;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,MAAM;EACxD,MAAM;IAAEC,IAAI,GAAG,IAAI;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGM,OAAO;EACtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3CC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIa,IAAI,EAAE;MACN,MAAMI,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEC,WAAW,KAAK;QAChE,KAAK,MAAM;UAAEC;QAAe,CAAC,IAAIF,OAAO,EACpCH,SAAS,CAACK,cAAc,CAAC;QAC7Bb,QAAQ,CAACW,OAAO,EAAEC,WAAW,CAAC;MAClC,CAAC,EAAER,OAAO,CAAC;MACX;MACAK,QAAQ,CAACK,OAAO,CAACT,IAAI,CAAC;MACtB,OAAO,MAAM;QACTI,QAAQ,CAACM,UAAU,EAAE;MACzB,CAAC;IACL;IACA,OAAOrB,IAAI;EACf,CAAC,EAAE,CAACW,IAAI,EAAEL,QAAQ,EAAEJ,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEM,OAAO,CAAC,CAAC;EAC1D,MAAMY,GAAG,GAAGvB,WAAW,CAAEwB,WAAW,IAAK;IACrCX,OAAO,CAACW,WAAW,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACD,GAAG,EAAET,MAAM,CAAC;AACxB;AAEA,SAASR,YAAY"},"metadata":{},"sourceType":"module"}
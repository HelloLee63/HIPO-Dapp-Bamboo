{"ast":null,"code":"import { useState, useCallback } from 'react';\n\n/**\r\n *\r\n * @typedef handler\r\n * @type {object}\r\n * @property {number} value The value of the counter\r\n * @property {Function}  increment Increment counter value by 1\r\n * @property {Function} decrement Decrement counter value by 1\r\n * @property {Function} incrementBy Increment counter by incrAmount\r\n * @property {Function} decrementBy Decrement counter by decrAmount\r\n * @property {Function} reset Reset counter to initialValue\r\n * @see {@link https://rooks.vercel.app/docs/useCounter}\r\n */\n/**\r\n * Counter hook\r\n *\r\n * @param {number} initialValue The initial value of the counter\r\n * @returns {handler} A handler to interact with the counter\r\n * @see https://rooks.vercel.app/docs/useCounter\r\n */\nfunction useCounter(initialValue) {\n  const [counter, setCounter] = useState(initialValue);\n  /**\r\n   * Increment counter by an amount\r\n   *\r\n   * @param {number} incrAmount\r\n   */\n  const incrementBy = useCallback(incrAmount => {\n    setCounter(currentCounter => currentCounter + incrAmount);\n  }, []);\n  /**\r\n   *\r\n   * Decrement counter by an amount\r\n   *\r\n   * @param {*} decrAmount\r\n   */\n  const decrementBy = useCallback(decrAmount => {\n    incrementBy(-decrAmount);\n  }, [incrementBy]);\n  /**\r\n   * Increment counter by 1\r\n   */\n  const increment = useCallback(() => {\n    incrementBy(1);\n  }, [incrementBy]);\n  /**\r\n   * Decrement counter by 1\r\n   */\n  const decrement = useCallback(() => {\n    incrementBy(-1);\n  }, [incrementBy]);\n  /**\r\n   * Reset counter to initial value\r\n   */\n  const reset = useCallback(() => {\n    setCounter(initialValue);\n  }, [initialValue]);\n  return {\n    decrement,\n    decrementBy,\n    increment,\n    incrementBy,\n    reset,\n    value: counter\n  };\n}\nexport { useCounter };","map":{"version":3,"names":["useState","useCallback","useCounter","initialValue","counter","setCounter","incrementBy","incrAmount","currentCounter","decrementBy","decrAmount","increment","decrement","reset","value"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useCounter.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n/**\r\n *\r\n * @typedef handler\r\n * @type {object}\r\n * @property {number} value The value of the counter\r\n * @property {Function}  increment Increment counter value by 1\r\n * @property {Function} decrement Decrement counter value by 1\r\n * @property {Function} incrementBy Increment counter by incrAmount\r\n * @property {Function} decrementBy Decrement counter by decrAmount\r\n * @property {Function} reset Reset counter to initialValue\r\n * @see {@link https://rooks.vercel.app/docs/useCounter}\r\n */\r\n/**\r\n * Counter hook\r\n *\r\n * @param {number} initialValue The initial value of the counter\r\n * @returns {handler} A handler to interact with the counter\r\n * @see https://rooks.vercel.app/docs/useCounter\r\n */\r\nfunction useCounter(initialValue) {\r\n    const [counter, setCounter] = useState(initialValue);\r\n    /**\r\n     * Increment counter by an amount\r\n     *\r\n     * @param {number} incrAmount\r\n     */\r\n    const incrementBy = useCallback((incrAmount) => {\r\n        setCounter((currentCounter) => currentCounter + incrAmount);\r\n    }, []);\r\n    /**\r\n     *\r\n     * Decrement counter by an amount\r\n     *\r\n     * @param {*} decrAmount\r\n     */\r\n    const decrementBy = useCallback((decrAmount) => {\r\n        incrementBy(-decrAmount);\r\n    }, [incrementBy]);\r\n    /**\r\n     * Increment counter by 1\r\n     */\r\n    const increment = useCallback(() => {\r\n        incrementBy(1);\r\n    }, [incrementBy]);\r\n    /**\r\n     * Decrement counter by 1\r\n     */\r\n    const decrement = useCallback(() => {\r\n        incrementBy(-1);\r\n    }, [incrementBy]);\r\n    /**\r\n     * Reset counter to initial value\r\n     */\r\n    const reset = useCallback(() => {\r\n        setCounter(initialValue);\r\n    }, [initialValue]);\r\n    return {\r\n        decrement,\r\n        decrementBy,\r\n        increment,\r\n        incrementBy,\r\n        reset,\r\n        value: counter,\r\n    };\r\n}\n\nexport { useCounter };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,YAAY,EAAE;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAACG,YAAY,CAAC;EACpD;AACJ;AACA;AACA;AACA;EACI,MAAMG,WAAW,GAAGL,WAAW,CAAEM,UAAU,IAAK;IAC5CF,UAAU,CAAEG,cAAc,IAAKA,cAAc,GAAGD,UAAU,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EACN;AACJ;AACA;AACA;AACA;AACA;EACI,MAAME,WAAW,GAAGR,WAAW,CAAES,UAAU,IAAK;IAC5CJ,WAAW,CAAC,CAACI,UAAU,CAAC;EAC5B,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EACjB;AACJ;AACA;EACI,MAAMK,SAAS,GAAGV,WAAW,CAAC,MAAM;IAChCK,WAAW,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB;AACJ;AACA;EACI,MAAMM,SAAS,GAAGX,WAAW,CAAC,MAAM;IAChCK,WAAW,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB;AACJ;AACA;EACI,MAAMO,KAAK,GAAGZ,WAAW,CAAC,MAAM;IAC5BI,UAAU,CAACF,YAAY,CAAC;EAC5B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAClB,OAAO;IACHS,SAAS;IACTH,WAAW;IACXE,SAAS;IACTL,WAAW;IACXO,KAAK;IACLC,KAAK,EAAEV;EACX,CAAC;AACL;AAEA,SAASF,UAAU"},"metadata":{},"sourceType":"module"}
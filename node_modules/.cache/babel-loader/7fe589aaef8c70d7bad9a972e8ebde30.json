{"ast":null,"code":"import { useRef, useMemo, useEffect } from 'react';\nimport { useDidMount } from './useDidMount.js';\nimport { useWillUnmount } from './useWillUnmount.js';\n\n/**\r\n *  useDidUpdate hook\r\n *\r\n *  Fires a callback on component update\r\n *  Can take in a list of conditions to fire callback when one of the\r\n *  conditions changes\r\n *\r\n * @param {Function} callback The callback to be called on update\r\n * @param {Array} conditions The list of variables which trigger update when they are changed\r\n * @see https://rooks.vercel.app/docs/useDidUpdate\r\n */\nfunction useDidUpdate(callback, conditions) {\n  const hasMountedRef = useRef(false);\n  const internalConditions = useMemo(() => {\n    if (typeof conditions !== \"undefined\" && !Array.isArray(conditions)) {\n      return [conditions];\n    } else if (Array.isArray(conditions) && conditions.length === 0) {\n      console.warn(\"Using [] as the second argument makes useDidUpdate a noop. The second argument should either be `undefined` or an array of length greater than 0.\");\n    }\n    return conditions;\n  }, [conditions]);\n  useEffect(() => {\n    if (hasMountedRef.current) {\n      callback();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, internalConditions);\n  useDidMount(() => {\n    hasMountedRef.current = true;\n  });\n  useWillUnmount(() => {\n    hasMountedRef.current = false;\n  });\n}\nexport { useDidUpdate };","map":{"version":3,"names":["useRef","useMemo","useEffect","useDidMount","useWillUnmount","useDidUpdate","callback","conditions","hasMountedRef","internalConditions","Array","isArray","length","console","warn","current"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/node_modules/rooks/dist/esm/hooks/useDidUpdate.js"],"sourcesContent":["import { useRef, useMemo, useEffect } from 'react';\nimport { useDidMount } from './useDidMount.js';\nimport { useWillUnmount } from './useWillUnmount.js';\n\n/**\r\n *  useDidUpdate hook\r\n *\r\n *  Fires a callback on component update\r\n *  Can take in a list of conditions to fire callback when one of the\r\n *  conditions changes\r\n *\r\n * @param {Function} callback The callback to be called on update\r\n * @param {Array} conditions The list of variables which trigger update when they are changed\r\n * @see https://rooks.vercel.app/docs/useDidUpdate\r\n */\r\nfunction useDidUpdate(callback, conditions) {\r\n    const hasMountedRef = useRef(false);\r\n    const internalConditions = useMemo(() => {\r\n        if (typeof conditions !== \"undefined\" && !Array.isArray(conditions)) {\r\n            return [conditions];\r\n        }\r\n        else if (Array.isArray(conditions) && conditions.length === 0) {\r\n            console.warn(\"Using [] as the second argument makes useDidUpdate a noop. The second argument should either be `undefined` or an array of length greater than 0.\");\r\n        }\r\n        return conditions;\r\n    }, [conditions]);\r\n    useEffect(() => {\r\n        if (hasMountedRef.current) {\r\n            callback();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, internalConditions);\r\n    useDidMount(() => {\r\n        hasMountedRef.current = true;\r\n    });\r\n    useWillUnmount(() => {\r\n        hasMountedRef.current = false;\r\n    });\r\n}\n\nexport { useDidUpdate };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACxC,MAAMC,aAAa,GAAGR,MAAM,CAAC,KAAK,CAAC;EACnC,MAAMS,kBAAkB,GAAGR,OAAO,CAAC,MAAM;IACrC,IAAI,OAAOM,UAAU,KAAK,WAAW,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;MACjE,OAAO,CAACA,UAAU,CAAC;IACvB,CAAC,MACI,IAAIG,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,IAAIA,UAAU,CAACK,MAAM,KAAK,CAAC,EAAE;MAC3DC,OAAO,CAACC,IAAI,CAAC,mJAAmJ,CAAC;IACrK;IACA,OAAOP,UAAU;EACrB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChBL,SAAS,CAAC,MAAM;IACZ,IAAIM,aAAa,CAACO,OAAO,EAAE;MACvBT,QAAQ,EAAE;IACd;IACA;EACJ,CAAC,EAAEG,kBAAkB,CAAC;EACtBN,WAAW,CAAC,MAAM;IACdK,aAAa,CAACO,OAAO,GAAG,IAAI;EAChC,CAAC,CAAC;EACFX,cAAc,CAAC,MAAM;IACjBI,aAAa,CAACO,OAAO,GAAG,KAAK;EACjC,CAAC,CAAC;AACN;AAEA,SAASV,YAAY"},"metadata":{},"sourceType":"module"}
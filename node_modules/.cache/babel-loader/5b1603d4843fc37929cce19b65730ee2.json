{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/TxBtn.jsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { useWallet } from '../../wallet/WalletProvider';\n\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import { Contract } from 'web3-eth-contract';\n// import { ERC20_ABI, ERC20_ADDRESS } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TxBtn = _ref => {\n  _s();\n  let {\n    text,\n    className\n  } = _ref;\n  const wallet = useWallet();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n  useEffect(() => {\n    async function init() {\n      if (wallet.account) {\n        setWalletConnected(true);\n        // const balance = await web3Instance.eth.getBalance(wallet.account);\n        // setBalance(parseFloat(web3Instance.utils.fromWei(balance)));\n\n        // 检查用户是否已调用 approve 方法\n        // const tokenContract = new web3Instance.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n        // const allowance = await tokenContract.methods.allowance(accounts[0], YOUR_CONTRACT_ADDRESS).call();\n        // setIsApproved(parseFloat(allowance) > 0);\n      }\n    }\n\n    init();\n  }, []);\n  const connectWallet = async () => {\n    if (wallet.connecting || wallet.account) {\n      wallet.showWalletsModal();\n    }\n  };\n\n  // const approveToken = async () => {\n  //   const tokenContract = new web3.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n  //   const amountToApprove = web3.utils.toWei('100'); // 设置需要批准的金额\n\n  //   try {\n  //     await tokenContract.methods.approve(YOUR_CONTRACT_ADDRESS, amountToApprove).send({ from: account });\n  //     setIsApproved(true);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const submitTransaction = async () => {\n    // 在这里添加提交交易的代码\n  };\n  const handleClick = () => {\n    if (!walletConnected) {\n      connectWallet();\n    } else if (!isApproved) {\n      // approveToken();\n    } else if (balance <= 0) {\n      alert('balance is not enough');\n    } else {\n      submitTransaction();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: clsx(\"w-full h-12 items-center rounded-10px  px-3 py-2 text-base font-semibold font-Poppins\", className),\n    onClick: handleClick,\n    children: walletConnected ? isApproved ? {\n      text\n    } : 'Approve' : 'Wallet Connect'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TxBtn, \"0dtC49DqF8pjPT/0886dsApygsA=\", false, function () {\n  return [useWallet];\n});\n_c = TxBtn;\nexport default TxBtn;\nvar _c;\n$RefreshReg$(_c, \"TxBtn\");","map":{"version":3,"names":["clsx","React","useState","useEffect","Web3","useWallet","jsxDEV","_jsxDEV","TxBtn","_ref","_s","text","className","wallet","walletConnected","setWalletConnected","account","setAccount","web3","setWeb3","balance","setBalance","isApproved","setIsApproved","init","connectWallet","connecting","showWalletsModal","submitTransaction","handleClick","alert","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/TxBtn.jsx"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { useWallet } from '../../wallet/WalletProvider';\n\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import { Contract } from 'web3-eth-contract';\n// import { ERC20_ABI, ERC20_ADDRESS } from './constants';\n\nconst TxBtn = ({text, className}) => {\n  const wallet = useWallet()\n\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      if (wallet.account) {\n        setWalletConnected(true);\n        // const balance = await web3Instance.eth.getBalance(wallet.account);\n        // setBalance(parseFloat(web3Instance.utils.fromWei(balance)));\n\n        // 检查用户是否已调用 approve 方法\n        // const tokenContract = new web3Instance.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n        // const allowance = await tokenContract.methods.allowance(accounts[0], YOUR_CONTRACT_ADDRESS).call();\n        // setIsApproved(parseFloat(allowance) > 0);\n      }\n    }\n    init();\n  }, []);\n\n  const connectWallet = async () => {\n    if(wallet.connecting || wallet.account ){\n      wallet.showWalletsModal()\n    }\n  };\n\n  // const approveToken = async () => {\n  //   const tokenContract = new web3.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n  //   const amountToApprove = web3.utils.toWei('100'); // 设置需要批准的金额\n\n  //   try {\n  //     await tokenContract.methods.approve(YOUR_CONTRACT_ADDRESS, amountToApprove).send({ from: account });\n  //     setIsApproved(true);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const submitTransaction = async () => {\n    // 在这里添加提交交易的代码\n  };\n\n  const handleClick = () => {\n    if (!walletConnected) {\n      connectWallet()\n    } else if (!isApproved) {\n      // approveToken();\n    } else if (balance <= 0) {\n      alert('balance is not enough');\n    } else {\n      submitTransaction();\n    }\n  };\n\n  return (\n    <button \n      type='button' \n      className={clsx(\"w-full h-12 items-center rounded-10px  px-3 py-2 text-base font-semibold font-Poppins\", className)}\n      onClick={handleClick}\n    >\n      {walletConnected ? (isApproved ? {text} : 'Approve') : 'Wallet Connect'}\n    </button> \n  );\n};\n\nexport default TxBtn;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,SAAS,QAAQ,6BAA6B;;AAEvD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,IAAI;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC9B,MAAMI,MAAM,GAAGR,SAAS,EAAE;EAE1B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,eAAeqB,IAAIA,CAAA,EAAG;MACpB,IAAIX,MAAM,CAACG,OAAO,EAAE;QAClBD,kBAAkB,CAAC,IAAI,CAAC;QACxB;QACA;;QAEA;QACA;QACA;QACA;MACF;IACF;;IACAS,IAAI,EAAE;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAGZ,MAAM,CAACa,UAAU,IAAIb,MAAM,CAACG,OAAO,EAAE;MACtCH,MAAM,CAACc,gBAAgB,EAAE;IAC3B;EACF,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;EAAA,CACD;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACf,eAAe,EAAE;MACpBW,aAAa,EAAE;IACjB,CAAC,MAAM,IAAI,CAACH,UAAU,EAAE;MACtB;IAAA,CACD,MAAM,IAAIF,OAAO,IAAI,CAAC,EAAE;MACvBU,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,MAAM;MACLF,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,oBACErB,OAAA;IACEwB,IAAI,EAAC,QAAQ;IACbnB,SAAS,EAAEZ,IAAI,CAAC,uFAAuF,EAAEY,SAAS,CAAE;IACpHoB,OAAO,EAAEH,WAAY;IAAAI,QAAA,EAEpBnB,eAAe,GAAIQ,UAAU,GAAG;MAACX;IAAI,CAAC,GAAG,SAAS,GAAI;EAAgB;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEb,CAAC;AAAC3B,EAAA,CApEIF,KAAK;EAAA,QACMH,SAAS;AAAA;AAAAiC,EAAA,GADpB9B,KAAK;AAsEX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
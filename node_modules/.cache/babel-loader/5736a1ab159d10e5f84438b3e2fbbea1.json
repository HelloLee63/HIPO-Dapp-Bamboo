{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/modules/dashboard/components/dashboard-table-options/DashboardTableOptions.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useChain } from \"../../../../chain/ChainProvider\";\nimport Listbox from \"../../../../components/listbox/Listbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardTableOptions = _ref => {\n  _s();\n  let {\n    options\n  } = _ref;\n  const {\n    activeChain,\n    chains,\n    changeChain\n  } = useChain();\n  const optionItems = () => {\n    const itemsMap = new Map();\n    options.filter(option => !itemsMap.has(option.symbol) && itemsMap.set(option.symbol, 1));\n    console.log(itemsMap);\n    console.log(itemsMap.length);\n    return itemsMap;\n  };\n  optionItems();\n  const [selected, setSelected] = useState(activeChain);\n  const styles = {\n    listbox: \"w-60\",\n    button: {\n      normal: \"cursor-pointer rounded-2xl bg-table-options pl-3 pr-10 text-table-options-font text-center font-semibold  text-base font-Poppins\",\n      open: \"\",\n      unopen: \"\"\n    },\n    options: \"absolute mt-14 max-h-60 w-full overflow-auto rounded-xl shadow-bar-dropdown divide-y divide-soild bg-white text-base\",\n    option: {\n      normal: '',\n      active: '',\n      deactive: ''\n    }\n  };\n  useEffect(() => {\n    if (selected.meta.chainId === activeChain.meta.chainId) {\n      return;\n    }\n    changeChain(selected.meta.chainId);\n  }, [selected, activeChain, changeChain]);\n  return /*#__PURE__*/_jsxDEV(Listbox, {\n    items: chains,\n    selected: selected,\n    setSelected: setSelected,\n    styles: styles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardTableOptions, \"oaF4TSjV1jnzXxjD5+K86tHA/Ac=\", false, function () {\n  return [useChain];\n});\n_c = DashboardTableOptions;\nexport default DashboardTableOptions;\nvar _c;\n$RefreshReg$(_c, \"DashboardTableOptions\");","map":{"version":3,"names":["useEffect","useState","useChain","Listbox","jsxDEV","_jsxDEV","DashboardTableOptions","_ref","_s","options","activeChain","chains","changeChain","optionItems","itemsMap","Map","filter","option","has","symbol","set","console","log","length","selected","setSelected","styles","listbox","button","normal","open","unopen","active","deactive","meta","chainId","items","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/modules/dashboard/components/dashboard-table-options/DashboardTableOptions.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useChain } from \"../../../../chain/ChainProvider\";\nimport Listbox from \"../../../../components/listbox/Listbox\";\n\nconst DashboardTableOptions = ({options}) => {\n\n  const { activeChain, chains, changeChain } = useChain()\n  const optionItems = () => {\n    const itemsMap = new Map()\n    options.filter((option) => !itemsMap.has(option.symbol) && itemsMap.set(option.symbol, 1))\n    console.log(itemsMap);\n    console.log(itemsMap.length);\n    return itemsMap\n  }\n  optionItems()\n  const [selected, setSelected ] = useState(activeChain);\n\n  const styles = {\n    listbox: \"w-60\",\n    button: {\n      normal : \"cursor-pointer rounded-2xl bg-table-options pl-3 pr-10 text-table-options-font text-center font-semibold  text-base font-Poppins\",\n      open: \"\",\n      unopen : \"\"\n    },\n    options : \"absolute mt-14 max-h-60 w-full overflow-auto rounded-xl shadow-bar-dropdown divide-y divide-soild bg-white text-base\",\n    option : {\n      normal: '',\n      active: '',\n      deactive: ''\n    }\n  }\n\n  useEffect(() => {\n    if(selected.meta.chainId === activeChain.meta.chainId) {\n      return\n    }\n    changeChain(selected.meta.chainId);\n  }, [selected, activeChain, changeChain]);\n\n  return (\n    <Listbox \n      items={chains} \n      selected={ selected } \n      setSelected={setSelected}\n      styles={styles}\n    />\n  )\n}\n\nexport default DashboardTableOptions"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,OAAOC,OAAO,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,qBAAqB,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EAEtC,MAAM;IAAEG,WAAW;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGV,QAAQ,EAAE;EACvD,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,EAAE;IAC1BN,OAAO,CAACO,MAAM,CAAEC,MAAM,IAAK,CAACH,QAAQ,CAACI,GAAG,CAACD,MAAM,CAACE,MAAM,CAAC,IAAIL,QAAQ,CAACM,GAAG,CAACH,MAAM,CAACE,MAAM,EAAE,CAAC,CAAC,CAAC;IAC1FE,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;IACrBO,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACS,MAAM,CAAC;IAC5B,OAAOT,QAAQ;EACjB,CAAC;EACDD,WAAW,EAAE;EACb,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAE,GAAGxB,QAAQ,CAACS,WAAW,CAAC;EAEtD,MAAMgB,MAAM,GAAG;IACbC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE;MACNC,MAAM,EAAG,kIAAkI;MAC3IC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAG;IACX,CAAC;IACDtB,OAAO,EAAG,sHAAsH;IAChIQ,MAAM,EAAG;MACPY,MAAM,EAAE,EAAE;MACVG,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,IAAGwB,QAAQ,CAACU,IAAI,CAACC,OAAO,KAAKzB,WAAW,CAACwB,IAAI,CAACC,OAAO,EAAE;MACrD;IACF;IACAvB,WAAW,CAACY,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC;EACpC,CAAC,EAAE,CAACX,QAAQ,EAAEd,WAAW,EAAEE,WAAW,CAAC,CAAC;EAExC,oBACEP,OAAA,CAACF,OAAO;IACNiC,KAAK,EAAEzB,MAAO;IACda,QAAQ,EAAGA,QAAU;IACrBC,WAAW,EAAEA,WAAY;IACzBC,MAAM,EAAEA;EAAO;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEN,CAAC;AAAAhC,EAAA,CA3CKF,qBAAqB;EAAA,QAEoBJ,QAAQ;AAAA;AAAAuC,EAAA,GAFjDnC,qBAAqB;AA6C3B,eAAeA,qBAAqB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
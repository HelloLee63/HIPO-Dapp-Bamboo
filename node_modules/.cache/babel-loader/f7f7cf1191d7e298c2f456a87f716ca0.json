{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { formatDateTime, formatTimer } from \"../../../../helpers/formater\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SycTimer = () => {\n  _s();\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // {formatDateTime(tx.returnValues.startTimestamp * 1_000) ?? '-'}\n\n  console.log(Date.now());\n  function getSycTimer(timestamp) {\n    // function getSycTimer() {\n    clearInterval(intervalRef.current);\n    setSycTime(timestamp);\n    // setSycTime(Date.now());\n    setNow(Date.now());\n    intervalRef.current = setInterval(() => {\n      setNow(Date.now());\n    }, 1000);\n  }\n  function handleStop() {\n    clearInterval(intervalRef.current);\n  }\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTimer(now, sycTime, secondsPassed), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pl-1\",\n        children: \" ago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getSycTimer(1678680155511),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SycTimer, \"zN6S3UY/MrWu0OYOCC8mVkrjXQs=\");\n_c = SycTimer;\nexport default SycTimer;\nvar _c;\n$RefreshReg$(_c, \"SycTimer\");","map":{"version":3,"names":["useRef","useState","formatDateTime","formatTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","SycTimer","_s","sycTime","setSycTime","now","setNow","intervalRef","console","log","Date","getSycTimer","timestamp","clearInterval","current","setInterval","handleStop","secondsPassed","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { formatDateTime, formatTimer } from \"../../../../helpers/formater\";\n\n\nconst SycTimer = () => {\n\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // {formatDateTime(tx.returnValues.startTimestamp * 1_000) ?? '-'}\n\n  console.log(Date.now());\n  \n\n  function getSycTimer(timestamp) {\n  // function getSycTimer() {\n    clearInterval(intervalRef.current);\n    setSycTime(timestamp);\n    // setSycTime(Date.now());\n    setNow(Date.now());\n    intervalRef.current = setInterval(() => {\n      setNow(Date.now());\n    }, 1000);\n  }\n\n  function handleStop() {\n    clearInterval(intervalRef.current);\n  }\n\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n\n  return (\n    <>\n      <div>\n        {formatTimer(now, sycTime, secondsPassed)}\n        <span className=\"pl-1\"> ago</span>\n      </div>\n      <button onClick={() => getSycTimer(1678680155511)} >Start</button>\n      <button onClick={handleStop} >Stop</button>\n    </>\n  )\n}\n\nexport default SycTimer"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMa,WAAW,GAAGd,MAAM,CAAC,IAAI,CAAC;;EAEhC;;EAEAe,OAAO,CAACC,GAAG,CAACC,IAAI,CAACL,GAAG,EAAE,CAAC;EAGvB,SAASM,WAAWA,CAACC,SAAS,EAAE;IAChC;IACEC,aAAa,CAACN,WAAW,CAACO,OAAO,CAAC;IAClCV,UAAU,CAACQ,SAAS,CAAC;IACrB;IACAN,MAAM,CAACI,IAAI,CAACL,GAAG,EAAE,CAAC;IAClBE,WAAW,CAACO,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCT,MAAM,CAACI,IAAI,CAACL,GAAG,EAAE,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,SAASW,UAAUA,CAAA,EAAG;IACpBH,aAAa,CAACN,WAAW,CAACO,OAAO,CAAC;EACpC;EAEA,IAAIG,aAAa,GAAG,CAAC;EACrB,IAAId,OAAO,IAAI,IAAI,IAAIE,GAAG,IAAI,IAAI,EAAE;IAClCY,aAAa,GAAG,CAACZ,GAAG,GAAGF,OAAO,IAAI,IAAI;EACxC;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GACGtB,WAAW,CAACS,GAAG,EAAEF,OAAO,EAAEc,aAAa,CAAC,eACzCnB,OAAA;QAAMqB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,eACNzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,aAAa,CAAE;MAAAO,QAAA,EAAE;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAClEzB,OAAA;MAAQ0B,OAAO,EAAER,UAAW;MAAAE,QAAA,EAAE;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC1C;AAEP,CAAC;AAAArB,EAAA,CAzCKD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA2Cd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { formatDateTime } from \"../../../../helpers/formater\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SycTimer = () => {\n  _s();\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // {formatDateTime(tx.returnValues.startTimestamp * 1_000) ?? '-'}\n\n  console.log(formatDateTime(1678520644 * 1000));\n  function getSycTime(timestamp) {\n    // function getSycTimer() {\n    clearInterval(intervalRef.current);\n    setSycTime(timestamp);\n    // setSycTime(Date.now());\n    setNow(Date.now());\n    intervalRef.current = setInterval(() => {\n      setNow(Date.now());\n    }, 1000);\n  }\n  function handleStop() {\n    clearInterval(intervalRef.current);\n  }\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [secondsPassed.toFixed(0), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pl-1\",\n        children: \"seconds ago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSycTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SycTimer, \"zN6S3UY/MrWu0OYOCC8mVkrjXQs=\");\n_c = SycTimer;\nexport default SycTimer;\nvar _c;\n$RefreshReg$(_c, \"SycTimer\");","map":{"version":3,"names":["useRef","useState","formatDateTime","jsxDEV","_jsxDEV","Fragment","_Fragment","SycTimer","_s","sycTime","setSycTime","now","setNow","intervalRef","console","log","getSycTime","timestamp","clearInterval","current","Date","setInterval","handleStop","secondsPassed","children","toFixed","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","getSycTimer","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { formatDateTime } from \"../../../../helpers/formater\";\n\nconst SycTimer = () => {\n\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // {formatDateTime(tx.returnValues.startTimestamp * 1_000) ?? '-'}\n\n  console.log(formatDateTime(1678520644*1_000));\n\n  function getSycTime(timestamp) {\n  // function getSycTimer() {\n    clearInterval(intervalRef.current);\n    setSycTime(timestamp);\n    // setSycTime(Date.now());\n    setNow(Date.now());\n    intervalRef.current = setInterval(() => {\n      setNow(Date.now());\n    }, 1000);\n  }\n\n  function handleStop() {\n    clearInterval(intervalRef.current);\n  }\n\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n\n  return (\n    <>\n      <div>\n        {secondsPassed.toFixed(0)}\n        <span className=\"pl-1\">seconds ago</span>\n      </div>\n      <button onClick={getSycTimer} >Start</button>\n      <button onClick={handleStop} >Stop</button>\n    </>\n  )\n}\n\nexport default SycTimer"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMY,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEhC;;EAEAc,OAAO,CAACC,GAAG,CAACb,cAAc,CAAC,UAAU,GAAC,IAAK,CAAC,CAAC;EAE7C,SAASc,UAAUA,CAACC,SAAS,EAAE;IAC/B;IACEC,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC;IAClCT,UAAU,CAACO,SAAS,CAAC;IACrB;IACAL,MAAM,CAACQ,IAAI,CAACT,GAAG,EAAE,CAAC;IAClBE,WAAW,CAACM,OAAO,GAAGE,WAAW,CAAC,MAAM;MACtCT,MAAM,CAACQ,IAAI,CAACT,GAAG,EAAE,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,SAASW,UAAUA,CAAA,EAAG;IACpBJ,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC;EACpC;EAEA,IAAII,aAAa,GAAG,CAAC;EACrB,IAAId,OAAO,IAAI,IAAI,IAAIE,GAAG,IAAI,IAAI,EAAE;IAClCY,aAAa,GAAG,CAACZ,GAAG,GAAGF,OAAO,IAAI,IAAI;EACxC;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GACGD,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC,eACzBrB,OAAA;QAAMsB,SAAS,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,eACN1B,OAAA;MAAQ2B,OAAO,EAAEC,WAAY;MAAAR,QAAA,EAAE;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC7C1B,OAAA;MAAQ2B,OAAO,EAAET,UAAW;MAAAE,QAAA,EAAE;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC1C;AAEP,CAAC;AAAAtB,EAAA,CAxCKD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SycTimer = () => {\n  _s();\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // function getSycTime(timestamp) {\n  // function getSycTime() {\n  //   clearInterval(intervalRef.current);\n  // setSycTime(timestamp);\n  //   setSycTime(Date.now());\n  //   setNow(Date.now());\n  //   intervalRef.current = setInterval(() => {\n  //     setNow(Date.now());\n  //   }, 1000);\n  // }\n\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: secondsPassed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SycTimer, \"zN6S3UY/MrWu0OYOCC8mVkrjXQs=\");\n_c = SycTimer;\nexport default SycTimer;\nvar _c;\n$RefreshReg$(_c, \"SycTimer\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SycTimer","_s","sycTime","setSycTime","now","setNow","intervalRef","secondsPassed","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/moudles/dashboard/components/syc-timer/SycTimer.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SycTimer = () => {\n\n  const [sycTime, setSycTime] = useState(null);\n  const [now, setNow] = useState(null);\n  const intervalRef = useRef(null);\n\n  // function getSycTime(timestamp) {\n  // function getSycTime() {\n  //   clearInterval(intervalRef.current);\n    // setSycTime(timestamp);\n  //   setSycTime(Date.now());\n  //   setNow(Date.now());\n  //   intervalRef.current = setInterval(() => {\n  //     setNow(Date.now());\n  //   }, 1000);\n  // }\n\n  let secondsPassed = 0;\n  if (sycTime != null && now != null) {\n    secondsPassed = (now - sycTime) / 1000;\n  }\n\n  return (\n    <>\n      <div>{secondsPassed}</div>\n      <button>Start</button>\n    </>\n  )\n}\n\nexport default SycTimer"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMW,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA;EACA;EACE;EACF;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIa,aAAa,GAAG,CAAC;EACrB,IAAIL,OAAO,IAAI,IAAI,IAAIE,GAAG,IAAI,IAAI,EAAE;IAClCG,aAAa,GAAG,CAACH,GAAG,GAAGF,OAAO,IAAI,IAAI;EACxC;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAMD;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC1Bf,OAAA;MAAAW,QAAA,EAAQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACrB;AAEP,CAAC;AAAAX,EAAA,CA5BKD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
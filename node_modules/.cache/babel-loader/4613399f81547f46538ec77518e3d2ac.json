{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pool } from '@uniswap/v3-sdk';\nimport { Token, WETH9 } from '@uniswap/sdk-core';\nimport { ethers } from 'ethers';\nimport { abi as IUniswapV3PoolABI } from '@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterestPoolInfo = _ref => {\n  _s();\n  let {\n    poolAddress,\n    providerUrl,\n    children\n  } = _ref;\n  const [tokenA, setTokenA] = useState({});\n  const [tokenB, setTokenB] = useState({});\n  const [price, setPrice] = useState(0);\n  const fetchPoolData = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(providerUrl);\n    const poolContract = new ethers.Contract(poolAddress, IUniswapV3PoolABI, provider);\n    const slot0 = await poolContract.slot0();\n    const currentPrice = parseFloat(slot0[0].toString()) / parseFloat(slot0[1].toString());\n    const token0Address = await poolContract.token0();\n    const token1Address = await poolContract.token1();\n    const token0 = new Token(1, token0Address, 18);\n    const token1 = new Token(1, token1Address, 18);\n    const liquidity = await poolContract.liquidity();\n    const sqrtPriceX96 = slot0[0];\n    const sqrtPriceAX96 = slot0[1];\n    const pool = new Pool(token0, token1, 3000, sqrtPriceX96, liquidity, sqrtPriceAX96);\n    const token0Reserves = pool.reserve0.toFixed(2);\n    const token1Reserves = pool.reserve1.toFixed(2);\n    setTokenA({\n      symbol: token0.symbol,\n      reserves: token0Reserves\n    });\n    setTokenB({\n      symbol: token1.symbol,\n      reserves: token1Reserves\n    });\n    setPrice(currentPrice);\n  };\n  useEffect(() => {\n    fetchPoolData();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <div>Token A: {tokenA.symbol} - Reserves: {tokenA.reserves}</div>\n    //   <div>Token B: {tokenB.symbol} - Reserves: {tokenB.reserves}</div>\n    //   <div>Price: 1 {tokenA.symbol} = {price} {tokenB.symbol}</div>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false)\n  );\n};\n_s(InterestPoolInfo, \"byPl7/4ro/q0SN6xGayANutMxoo=\");\n_c = InterestPoolInfo;\nexport default InterestPoolInfo;\nvar _c;\n$RefreshReg$(_c, \"InterestPoolInfo\");","map":{"version":3,"names":["React","useEffect","useState","Pool","Token","WETH9","ethers","abi","IUniswapV3PoolABI","Fragment","_Fragment","jsxDEV","_jsxDEV","InterestPoolInfo","_ref","_s","poolAddress","providerUrl","children","tokenA","setTokenA","tokenB","setTokenB","price","setPrice","fetchPoolData","provider","providers","JsonRpcProvider","poolContract","Contract","slot0","currentPrice","parseFloat","toString","token0Address","token0","token1Address","token1","liquidity","sqrtPriceX96","sqrtPriceAX96","pool","token0Reserves","reserve0","toFixed","token1Reserves","reserve1","symbol","reserves","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/interest-pool-info/InterestPoolInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pool } from '@uniswap/v3-sdk';\nimport { Token, WETH9 } from '@uniswap/sdk-core';\nimport { ethers } from 'ethers';\nimport { abi as IUniswapV3PoolABI } from '@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json';\n\nconst InterestPoolInfo = ({ poolAddress, providerUrl, children }) => {\n  const [tokenA, setTokenA] = useState({});\n  const [tokenB, setTokenB] = useState({});\n  const [price, setPrice] = useState(0);\n\n  const fetchPoolData = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(providerUrl);\n    const poolContract = new ethers.Contract(poolAddress, IUniswapV3PoolABI, provider);\n\n    const slot0 = await poolContract.slot0();\n    const currentPrice = parseFloat(slot0[0].toString()) / parseFloat(slot0[1].toString());\n\n    const token0Address = await poolContract.token0();\n    const token1Address = await poolContract.token1();\n\n    const token0 = new Token(1, token0Address, 18);\n    const token1 = new Token(1, token1Address, 18);\n\n    const liquidity = await poolContract.liquidity();\n    const sqrtPriceX96 = slot0[0];\n    const sqrtPriceAX96 = slot0[1];\n    const pool = new Pool(token0, token1, 3000, sqrtPriceX96, liquidity, sqrtPriceAX96);\n\n    const token0Reserves = pool.reserve0.toFixed(2);\n    const token1Reserves = pool.reserve1.toFixed(2);\n\n    setTokenA({ symbol: token0.symbol, reserves: token0Reserves });\n    setTokenB({ symbol: token1.symbol, reserves: token1Reserves });\n    setPrice(currentPrice);\n  };\n\n  useEffect(() => {\n    fetchPoolData();\n  }, []);\n\n  return (\n    // <div>\n    //   <div>Token A: {tokenA.symbol} - Reserves: {tokenA.reserves}</div>\n    //   <div>Token B: {tokenB.symbol} - Reserves: {tokenB.reserves}</div>\n    //   <div>Price: 1 {tokenA.symbol} = {price} {tokenB.symbol}</div>\n    // </div>\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default InterestPoolInfo\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
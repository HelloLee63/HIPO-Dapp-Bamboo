{"ast":null,"code":"var _jsxFileName = \"/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/TxBtn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { useWallet } from '../../wallet/WalletProvider';\n\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import { Contract } from 'web3-eth-contract';\n// import { ERC20_ABI, ERC20_ADDRESS } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TxBtn = _ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  const wallet = useWallet();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n  useEffect(() => {\n    async function init() {\n      if (wallet.account) {\n        setWalletConnected(true);\n\n        // const balance = await web3Instance.eth.getBalance(wallet.account);\n        // setBalance(parseFloat(web3Instance.utils.fromWei(balance)));\n\n        // 检查用户是否已调用 approve 方法\n        // const tokenContract = new web3Instance.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n        // const allowance = await tokenContract.methods.allowance(accounts[0], YOUR_CONTRACT_ADDRESS).call();\n        // setIsApproved(parseFloat(allowance) > 0);\n      }\n    }\n\n    init();\n  }, []);\n  const connectWallet = async () => {\n    if (!walletConnected) {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        try {\n          const accounts = await provider.request({\n            method: 'eth_requestAccounts'\n          });\n          setWalletConnected(true);\n          setAccount(accounts[0]);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n  };\n\n  // const approveToken = async () => {\n  //   const tokenContract = new web3.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n  //   const amountToApprove = web3.utils.toWei('100'); // 设置需要批准的金额\n\n  //   try {\n  //     await tokenContract.methods.approve(YOUR_CONTRACT_ADDRESS, amountToApprove).send({ from: account });\n  //     setIsApproved(true);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const submitTransaction = async () => {\n    // 在这里添加提交交易的代码\n  };\n  const handleClick = () => {\n    if (!walletConnected) {\n      wallet.connect();\n    } else if (!isApproved) {\n      approveToken();\n    } else if (balance <= 0) {\n      alert('balance is not enough');\n    } else {\n      submitTransaction();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: clsx(\"w-full h-12 items-center rounded-10px  px-3 py-2 text-base font-semibold font-Poppins\", className),\n    onClick: handleClick,\n    children: walletConnected ? isApproved ? {\n      text\n    } : 'Approve' : 'Wallet Connect'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TxBtn, \"0dtC49DqF8pjPT/0886dsApygsA=\", false, function () {\n  return [useWallet];\n});\n_c = TxBtn;\nexport default TxBtn;\nvar _c;\n$RefreshReg$(_c, \"TxBtn\");","map":{"version":3,"names":["React","useState","useEffect","Web3","useWallet","jsxDEV","_jsxDEV","TxBtn","_ref","_s","text","wallet","walletConnected","setWalletConnected","account","setAccount","web3","setWeb3","balance","setBalance","isApproved","setIsApproved","init","connectWallet","provider","detectEthereumProvider","accounts","request","method","error","console","submitTransaction","handleClick","connect","approveToken","alert","type","className","clsx","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lijinxing/Documents/hipo-dapp-bamboo/src/web3/components/TxBtn.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { useWallet } from '../../wallet/WalletProvider';\n\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import { Contract } from 'web3-eth-contract';\n// import { ERC20_ABI, ERC20_ADDRESS } from './constants';\n\nconst TxBtn = ({text}) => {\n  const wallet = useWallet()\n\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      \n\n\n\n        if (wallet.account) {\n          setWalletConnected(true);\n          \n\n          // const balance = await web3Instance.eth.getBalance(wallet.account);\n          // setBalance(parseFloat(web3Instance.utils.fromWei(balance)));\n\n          // 检查用户是否已调用 approve 方法\n          // const tokenContract = new web3Instance.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n          // const allowance = await tokenContract.methods.allowance(accounts[0], YOUR_CONTRACT_ADDRESS).call();\n          // setIsApproved(parseFloat(allowance) > 0);\n        }\n\n    }\n\n    init();\n  }, []);\n\n  const connectWallet = async () => {\n    if (!walletConnected) {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        try {\n          const accounts = await provider.request({ method: 'eth_requestAccounts' });\n          setWalletConnected(true);\n          setAccount(accounts[0]);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n  };\n\n  // const approveToken = async () => {\n  //   const tokenContract = new web3.eth.Contract(ERC20_ABI, ERC20_ADDRESS);\n  //   const amountToApprove = web3.utils.toWei('100'); // 设置需要批准的金额\n\n  //   try {\n  //     await tokenContract.methods.approve(YOUR_CONTRACT_ADDRESS, amountToApprove).send({ from: account });\n  //     setIsApproved(true);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const submitTransaction = async () => {\n    // 在这里添加提交交易的代码\n  };\n\n  const handleClick = () => {\n    if (!walletConnected) {\n      wallet.connect()\n    } else if (!isApproved) {\n      approveToken();\n    } else if (balance <= 0) {\n      alert('balance is not enough');\n    } else {\n      submitTransaction();\n    }\n  };\n\n  return (\n    <button \n      type='button' \n      className={clsx(\"w-full h-12 items-center rounded-10px  px-3 py-2 text-base font-semibold font-Poppins\", className)}\n      onClick={handleClick}\n    >\n      {walletConnected ? (isApproved ? {text} : 'Approve') : 'Wallet Connect'}\n    </button> \n  );\n};\n\nexport default TxBtn;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,SAAS,QAAQ,6BAA6B;;AAEvD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAF,IAAA;EACnB,MAAMG,MAAM,GAAGP,SAAS,EAAE;EAE1B,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,eAAeoB,IAAIA,CAAA,EAAG;MAKlB,IAAIX,MAAM,CAACG,OAAO,EAAE;QAClBD,kBAAkB,CAAC,IAAI,CAAC;;QAGxB;QACA;;QAEA;QACA;QACA;QACA;MACF;IAEJ;;IAEAS,IAAI,EAAE;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACX,eAAe,EAAE;MACpB,MAAMY,QAAQ,GAAG,MAAMC,sBAAsB,EAAE;MAE/C,IAAID,QAAQ,EAAE;QACZ,IAAI;UACF,MAAME,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;UAC1Ef,kBAAkB,CAAC,IAAI,CAAC;UACxBE,UAAU,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF;IACF;EACF,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;EAAA,CACD;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACpB,eAAe,EAAE;MACpBD,MAAM,CAACsB,OAAO,EAAE;IAClB,CAAC,MAAM,IAAI,CAACb,UAAU,EAAE;MACtBc,YAAY,EAAE;IAChB,CAAC,MAAM,IAAIhB,OAAO,IAAI,CAAC,EAAE;MACvBiB,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,MAAM;MACLJ,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,oBACEzB,OAAA;IACE8B,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEC,IAAI,CAAC,uFAAuF,EAAED,SAAS,CAAE;IACpHE,OAAO,EAAEP,WAAY;IAAAQ,QAAA,EAEpB5B,eAAe,GAAIQ,UAAU,GAAG;MAACV;IAAI,CAAC,GAAG,SAAS,GAAI;EAAgB;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEb,CAAC;AAACnC,EAAA,CAtFIF,KAAK;EAAA,QACMH,SAAS;AAAA;AAAAyC,EAAA,GADpBtC,KAAK;AAwFX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}